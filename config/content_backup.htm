<h1>About</h1>
<p><span style="background-color: #ffff99;"> 請各學員自行準備一副有線耳機, 若使用手機觀看影片, 則可以準備手機適用的有線或無線耳機 </span> .</p>
<p>本課程為機械設計工程系大二的電腦輔助設計與實習課程, 課程目標在教導學員如何利用電腦輔助機械設計套件建立零組件模型 (機械元件設計領域), 並能轉入機電模擬系統中配置致動器與感測器後進行控制系統設計 (電機與電子元件設計領域), 目的是能透過 Web-based 程式系統的整合 (資訊設計領域), 在隨後的協同產品設計實習課程中加以應用.</p>
<hr/>
<p>利用全雲端環境上課:</p>
<p style="padding-left: 30px;">Ubuntu server、Replit、Github、Onedrive 與 Onshape 上進行電腦輔助設計與實習.</p>
<p>利用全近端環境上課:</p>
<p style="padding-left: 30px;">可攜 Python 程式系統、可攜 Solid Edge、Solvespace 、NX 與 CoppeliaSim 上進行電腦輔助設計與實習.</p>
<hr/>
<p>課程評分: 線上測驗、期中網站與簡報、期末網站與簡報.</p>
<p>線上測驗: w1 建立帳號後 (<span style="background-color: #ffff99;">請將密碼寫入手機的備忘錄</span>), 每週不定時進行.</p>
<p>期中網站與簡報: 期中考前一週開始進行.</p>
<p>期末網站與簡報: 期末考前一週開始進行.</p>
<p>期中成績: 期中考與之前各週線上測驗成績平均</p>
<p>學期成績: (期中成績與之後各週線上測驗成績平均)*60%+(期中網站與簡報成績)*20%+(期末網站與簡報成績)*20%</p>
<p>repo: <a href="https://github.com/mdecycu/cad2023"> https://github.com/mdecycu/cad2023 </a></p>
<p>site: <a href="https://mde.tw/cad2023"> https://mde.tw/cad2023 </a> or <a href="https://cad2.cycu.org/~yen/cad2023"> https://cad2.cycu.org/~yen/cad2023 </a></p>
<p>MS Teams 代碼: fnueb56</p>
<p>行事曆</p>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei"> 全頁檢視 </a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p>
<h2>如何維護網站</h2>
<p>以下的網站以 cmsimde 作為子模組的 Github Pages 網站維護為主:</p>
<p>cmsimde 是甚麼?</p>
<p style="padding-left: 30px;">cmsimde 是一套 <span style="background-color: #ffff99;"> 網際內容管理系統 </span> , 利用 <span style="background-color: #ffff99;"> Python Flask </span> 建立動態網站, 讓管理者登入後透過 <span style="background-color: #ffff99;"> 線上編輯器 </span> 管理大綱式 (Outline-style) 網頁架構, 且 <span style="background-color: #ffff99;"> 轉為靜態網站 </span> 時將網站內容關鍵字存為字典, 使用者可在靜態網站中以 <span style="background-color: #ffff99;"> 關鍵字搜詢 </span> 網頁內容.</p>
<p style="padding-left: 30px;">cmsimde 還整合 <span style="background-color: #ffff99;"> 網誌與網際簡報 </span> , 讓使用者可利用時間流程或專欄記事的方式建立網誌, 並能直接在靜態網站中進行專題簡報.</p>
<p>有網路連線時:</p>
<p style="padding-left: 30px;">採用 Replit (使用免費帳號時, 可能因為資源不足造成網站連線不穩定或編輯 <span style="background-color: #ffff99;"> 資料丟失 </span> ):</p>
<p style="padding-left: 30px;">在 Github 建立帶有 cmsimde 子模組的倉儲, 設定該倉儲的 Github Pages, 以 <span style="background-color: #ffff99;"> import </span> 方式指定使用 Python  語言後, 將倉儲輸入 Replit 中, 利用 Shell 指令 <span style="background-color: #ffff99;"> git submodule update --init </span> 取下子模組內容後 (因為 import 倉儲進入 Replit 並不會自動導入 submodule), 再利用 Shell 指令 <span style="background-color: #ffff99;"> pip install flask flask_cors bs4 lxml markdown pelican pyopenssl gevent </span> 等模組後, 以 Run 啟動網站後, 更改管理者密碼, 之後只要 main.py 執行便可利用動態網站維護 config/content.htm 中的內容, 完成後再利用 Convert 指令將 content.htm 中的內容轉為 content 目錄中的靜態網站資料.</p>
<p style="padding-left: 30px;">要將 Replit 上的 cmsimde 網站倉儲內容送回 Github 之前, 必須在 .replit 設定檔案中的 [env] 環境變數區, 設定 <span style="background-color: #ffff99;"> GIT_AUTHOR_NAME 與 GIT_AUTHOR_EMAIL </span> 等變數, 才能在利用 Tools 中的 <span style="background-color: #ffff99;"> Git 頁面工具 </span> 進行 git add 與 git commit -m 指令時綁定使用者身分, 完成改版內容提交後, 可直接在倉儲 <span style="background-color: #ffff99;"> .git/config </span> 檔案中置入具有維護 Repo 權限的 Token 後, 在 Git 頁面執行 git push, 或利用 Shell 指令執行 git push, 以便將改版的倉儲內容與 Github 保持同步. 每次改版推送結束後, Github Pages 的設定就會針對改版內容進行轉檔為最新的靜態網站內容.</p>
<p style="padding-left: 30px;">採用自架主機:</p>
<p style="padding-left: 30px;">利用一台 Ubuntu server 建構能夠讓多人透過不同 ports 啟動網站編輯, 伺服靜態網頁並將倉儲內容與 Github 保持同步.</p>
<p>無網路連線時:</p>
<p style="padding-left: 30px;">利用近端可攜 Python 程式環境維護網站內容, 可以利用 git add 與 git commit -m 登錄改版內容, 待有網路連線時再將改版提交內容以 git push 推向 Github.</p>
<h3>自架主機</h3>
<p>如何建立一台能讓多人共用的 Ubuntu server? 透過每人三個 ports (7 字頭用於模擬靜態網站, 8 字頭用於接受動態網站連線, 9 字頭的埠號則用於內部從一般 wsgi http 將資料轉入能接受外部連線的 https 協定資料.</p>
<hr/>
<p>利用 Nginx 建立 Ubuntu 帳號下的公開網頁架構, 其 nginx.conf 相關設定:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">location ~ ^/~(.+?)(/.*)?$ {
alias /home/$1/public_html$2;
index index.html index.htm;
autoindex on;
}</pre>
<p>設定 public_html</p>
<p><a href="https://www.server-world.info/en/note?os=Ubuntu_20.04&amp;p=nginx&amp;f=4"> https://www.server-world.info/en/note?os=Ubuntu_20.04&amp;p=nginx&amp;f=4 </a></p>
<p>Linux 操作系統的檔案與目錄權限, 以 rwx 作為代號, 其中 r 為 read, w 為 write 而 x 則為 execution, 分別代表"讀、寫與執行"等權限. 且每一個檔案或目錄都分為三種身分的設定: u 代表 user, g 代表 group 而 o 則代表 others. 其中又以數字代表"讀、寫與執行"等三種權限.</p>
<p>r: 4, w: 2, x: 1</p>
<p>當某一帳號下的 public_html 目錄希望作為 Nginx 伺服器的公用目錄時, 其 /home/your_home 的權限必須設為 711, 也就是 user 自己擁有全部權限, 而其他同群組與不同群組者, 只能執行.</p>
<p>外部 711 - user rwx, group x, other x</p>
<p style="padding-left: 30px;">chmod 711 /home/your_account</p>
<p>作為 Nginx 公用目錄的 public_html 權限則必須設定 user 自己擁有全部權限, 其他同群組與不同群組者, 則必須設為可讀與可執行.</p>
<p>public_html 755 - user rwx, group rx, other rx</p>
<p style="padding-left: 30px;">chmod 755 ~/public_html</p>
<hr/>
<p>stud 是一台 Ubuntu server, 讓每一個用戶透過多個 ports 共享 server  中所設置的外部與內部 ports.</p>
<p>其中以 9 開頭的 port 設定為內部 port,  而 8 開頭的 port 則用於外部連線.</p>
<p>當某一用戶誤用所分配的內部 port 時, 管理者就可以透過 lsof 指令找出該用戶, 並即時加以糾正.</p>
<p>又由於 8 開頭的外部 port 統一由管理者以 Stunnel 啟動並加以管控, 因此一般用戶產生誤用的情況只會發生在內部以 9 開頭的 port.</p>
<p>getps:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">#! /bin/bash
ps axo pid,comm,user | grep "python3"</pre>
<p>getport:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">lsof -i :$1</pre>
<p>getdir:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">pwdx $1</pre>
<p>列出 Ubuntu 中 port 使用相關資訊: lsof -i :9123</p>
<p>lsof: list open files</p>
<p>-i: selects the listing of files any of whose Internet address matches the address specified in i.  If no address is specified, this option selects the listing of all Internet and x.25 (HP-UX) network files.</p>
<hr/>
<p>waitress 利用 hupper 自動 reload:</p>
<p>在 Ubuntu 操作系統安裝 python3-hupper</p>
<p style="padding-left: 30px;">sudo apt install python3-hupper</p>
<p>進入倉儲目錄後, 利用 hupper3 執行 server.py</p>
<p style="padding-left: 30px;">cd cd2023</p>
<p style="padding-left: 30px;">hupper3 -m server.py</p>
<hr/>
<p>假如要以自己架設的伺服器來取代 Replit, 第一步是如何在 Ubuntu 22.04 Server 上建立每位學員的帳號. 使用 <a href="https://manpages.ubuntu.com/manpages/xenial/man8/newusers.8.html"> newusers </a> 指令, 配合建立一個包含帳號、密碼、uid、gid、comment、home dir 以及 shell (/bin/bash) 資料的 users.txt, 然後使用 sudo newusers users.txt 就可以完成所有學員帳號的建立. 但必須要先取得初始 uid, 也就是列出現有帳號的所屬 uid, 然後才能設定後續代號的 user id.</p>
<p>列出現有帳號 uid 的指令為: cut -d: -f1,3 /etc/passwd</p>
<p>表示要從 /etc/passwd 檔案, 以 : 符號分割檔案, 然後只取出第一與第三欄位的資料. 假如傳回:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">root:0
daemon:1
bin:2
sys:3
sync:4
games:5
man:6
lp:7
mail:8
news:9
uucp:10
proxy:13
www-data:33
backup:34
list:38
irc:39
gnats:41
nobody:65534
_apt:100
systemd-network:101
systemd-resolve:102
messagebus:103
systemd-timesync:104
pollinate:105
sshd:106
syslog:107
uuidd:108
tcpdump:109
tss:110
landscape:111
usbmux:112
tcexam:1000
lxd:999
postgres:113
tcexamdb:1001
cad2022:1002
stunnel4:998
cd1:1002
cd3:1003</pre>
<p>表示新建帳號的 uid 與 gid 就可以從 1004 開始, 然後連續增量後配給新的用戶</p>
<p>IP 位址或埠號分配</p>
<p>當各學員在一台 Ubuntu 22.04 Server 上擁有帳號 (最理想的情況是用 Email 通知其主機資訊與帳號密碼) 之後, 隨即可以利用 ssh 進行遠端登入.</p>
<p>進入 Ubuntu 操作系統後, 就能夠利用 git clone 取下課程倉儲, 然後利用 python3 cmsimde/wsgi.py 執行動態網頁, 若各學員能夠從 port 8000 - 9000 之間進行分配區隔, 只要各學員配合修改 init.py 中的 IP 與 port 設定後, 就可以分別以自架主機取代 Replit.</p>
<p>waitress</p>
<p>直接利用 Python3 執行 wsgi.py 儘管可以讓使用者登入編輯動態網站, 但效率並沒有 wsgi 模式高, 因此若能採用 <a href="https://docs.pylonsproject.org/projects/waitress/en/stable/index.html"> waitress </a> 的方式啟用動態網頁, 應該是較好的做法. 但 https 對外連線仍需透過 Stunnel 或 Nginx 銜接完成.</p>
<p>這時, 只要在倉儲根目錄建立 waitress_server.py</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">from waitress import serve
from cmsimde import flaskapp
 
serve(flaskapp.app, listen="127.0.0.1:9443")</pre>
<p>然後 stunnel.conf 搭配設定:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[https]
accept = stud.cycu.org:443
connect = 127.0.0.1:9443
cert = fullchain.pem
key = privkey.pem
TIMEOUTclose = 0</pre>
<p>就可以在 python3 waitress_server.py 執行下, 讓外部以 https://stud.cycu.org 連結到對應的動態網頁.</p>
<p>在此的問題是, waitress_server.py 如何以 service 啟動, stunnel 如何搭配執行. 最簡單的情況是 Stunnel 先以 service 執行, 但事先納入所有學員的規劃 port, 其中包括內容 port 以及外部 port, 並且讓學員在需要編輯動態網頁的時候, 自行啟動各自的 waitress_server.py</p>
<p>利用 Python 取 IPv6 網路位址:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import socket
ip = socket.getaddrinfo("stud.cycu.org", 0, socket.AF_INET6)[0][4][0]
print(ip)</pre>
<p>Virtualbox 虛擬主機</p>
<p>利用一台 16 核 80 GB 記憶體的虛擬主機, 建立約 250 個用戶後, 看能否透過 Stunnel 與 wsgi 啟動各自的 cmsimde 動態網站.</p>
<p>為了建立多用戶帳號, 可以利用 newusers 指令, 配合 users.txt 檔案:</p>
<p>users.txt 檔案格式, 分別是: 使用者帳號, 預計使用 cad 加上學號, 或者是 cp 加上學號, 而密碼可以採用亂數產生, 至於 uid 與 gid 則需先使用</p>
<p>cut -d: -f1,3 /etc/passwd</p>
<p>查詢現有帳號的對應 id 後, 再逐一利用迴圈增量. 至於 comment 欄位, 可以直接採用 cad 或 cp 加上學號, 而 shell 欄位則選用 /bin/bash</p>
<p>user_1:password_2:1002:1002:user_1:/home/user_1:/bin/bash</p>
<p>sudo newusers users.txt</p>
<p>依照上述流程建立帳號後, 可以保留使用者學號、帳號與對應密碼, 然後利用 Gmail 將此訊息郵寄給各用戶.</p>
<p>至於透過程式方法必須完成下列事項:</p>
<ol>
<li>建立 users.txt, 然後傳送至虛擬主機</li>
<li>利用 sudo newuser users.txt 建立各用戶帳號與 home directory</li>
<li>建立 users_account.txt, 包含與 users.txt 各用戶帳號與密碼資訊</li>
<li>利用 Gmail 逐一將 users_account.txt 的帳號與密碼資訊寄給用戶</li>
</ol>
<p>password generator</p>
<p>Brython 版 <a href="https://mde.tw/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/8864b4178c8ec64f60d30014d3ab743499d51be4/password_generator.py"> password generator </a> .</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random
import string
 
def password_generator(size=4, chars=string.ascii_lowercase + string.digits):
 
    """Generate random password
    """
    return ''.join(random.choice(chars) for _ in range(size))
 
pass_string = "abcdefghkmnpqrstuwxyz123456789"
for i in range(10):
    print(password_generator(4, pass_string))</pre>
<p>首先要建立各課程對應的 Ubuntu 帳號與密碼檔案:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 導入亂數模組
import random
# 導入字串模組
import string
# 利用 def 關鍵字定義函式
# 函式的輸入變數可以設定初始值
def password_generator(size=4, chars=string.ascii_lowercase + string.digits):
    # 函式內以多行註解說明函式功能
    """Generate random password
    """
    # 利用 return 關鍵字將所產生的亂數字串傳回
    return ''.join(random.choice(chars) for _ in range(size))
# 建立一個變數與隨後的字串對應
pass_string = "abcdefghkmnpqrstuwxyz123456789"
cp_num = ["0747", "0761"]
cad_num = ["0773", "0786"]
def gen_acc_pass(course, course_num):
    stud_list =[]
    for num in course_num:
        url = "https://nfu.cycu.org/?semester=1111&amp;courseno=" + num + "&amp;column=True"
        class_list = open(url).read().split("\n")[:-1]
        stud_list += class_list
        #print(stud_list)
    for stud_num in stud_list:
        password = password_generator(4, pass_string)
        #print(password)
        account = course + stud_num
        #print(account)
        print(stud_num + "\t" + account + "\t" + password)
gen_acc_pass("cp", cp_num)
gen_acc_pass("cad", cad_num)</pre>
<p>Windows 與 Ubuntu 格式差異</p>
<p>create_users_txt.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">with open("2022_fall_ubuntu_account_pass.txt") as f:
    data = f.readlines()
# newusers format:  
# pw_name:pw_passwd:pw_uid:pw_gid:pw_gecos:pw_dir:pw_shell
# uid starts from 1002
uid_starts = 1001
users = ""
send = ""
 
for i in data:
    #stud_num \t account \t password \n
    stud = i.split("\t")
    stud_num = stud[0]
    account = stud[1]
    password = stud[2].rstrip()
    uid_starts += 1
    uid = str(uid_starts)
    gid = uid
    gecos = account
    home_dir = "/home/" + account
    shell = "/bin/bash"
    #print(stud_num, account, password)
    users += account + ":" + password + ":" + uid + ":" + gid + ":" + gecos + ":" + home_dir + ":" + shell + "\n"
    send += stud_num + ":" + account + ":" + password + "\n"
 
with open("users.txt", "w", encoding="utf-8", newline='\n') as f:
        f.write(users)
 
with open("send.txt", "w", encoding="utf-8", newline='\n') as f:
        f.write(send)</pre>
<p>假如沒有採用 newline='\n', 在 Windows 寫檔案所使用的跳行符號, 以 sftp 傳到 Ubuntu 時將會因為 shell 並非 /bin/bash 而是加上 ^M$ 的錯誤 shell 資料, 導入用戶無法 login.</p>
<p>若要修正跳行符號錯誤, 可以採用:</p>
<p>change_shell.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import os
with open("users.txt", "r", encoding="UTF-8") as f:
    data = f.read().splitlines()
for i in data:
    account = i.split(":")[0]
    print(account)
    os.system("sudo chsh -s /bin/bash " + account)</pre>
<p>當執行上列程式時, 為避免在程式中列出管理者密碼, 可以編輯 /etc/sudoers 並加入:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"># only require a password once every 60 minutes
Defaults timestamp_timeout=60</pre>
<p>可以讓 sudo python3 change_shell.py 執行時無需輸入管理者密碼.</p>
<hr/>
<p>s1511 必須利用 sudo pip3 install flask flask_cors bs4 lxml markdown pelican pyopenssl waitress 才能讓所有用戶共用模組, 並同時 sudo apt install python3-hupper 安裝 hupper3.</p>
<p>s1511 必須在 /etc/default/stunnel4 中加入 ENABLED=1 並以 sudo /etc/init.d/stunnel4 restart 才能讓 Stunnel 與 server 同步開機時啟動.</p>
<hr/>
<p>使用 Python3 刪除 Ubuntu 中的使用者帳號與 home directories:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import subprocess

"""
/etc/sudoers
vi /etc/sudoers
use w! to write the read only file
add the following to sudoers

# only require a password once every 60 minutes
Defaults timestamp_timeout=60

use 
sudo python3 del_users.py
to delete users and their home directories
"""

with open("users.txt", "r") as f:
    data = f.read().splitlines()
#print(data)
stud_list = []
for i in data:
    stud_num = i.split(":")[0]
    #print(stud_num)
    stud_list.append(stud_num)    
for user in stud_list:
    try:
        subprocess.run(["sudo", "userdel", "-r", user], check=True)
        print(str(user) + " deleted!")
        subprocess.run(["sudo", "rm", "-rf", f"/home/{user}"], check=True)
        print(str(user) + " home deleted!")
    except subprocess.CalledProcessesError:
        print(str(user) + " is not deleted!")
</pre>
<p></p>
<h3>Portable USB</h3>
<p>這裡所指的可攜套件是包含 Python 與 Git 等能讓使用者在近端執行 cmsimde 動態網站, 並對網站改版內容進行 git add, git commit -m 與 git push 的 USB 隨身碟程式套件.</p>
<p>截至 2023.06 最新版本 <a href="https://www.python.org/downloads/">CPython</a> 為 3.11.4 版.</p>
<p>以下為相關舊版的可攜 Python 程式套件:</p>
<p style="padding-left: 30px;">利用以下流程所建立的 Python 3.11.2 可攜套件: <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EbT9h2uxP41DhXp6TkYQKNABgtLPvnMq5y781nH5TzeuNQ?e=zW9Hkf"> Python311_portable.7z </a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EWWklzSXEqZAoAsF7YCiUdQBq3Frt-VQl9p0ah8ZE2AoBQ?e=qNMs7W"> 下載可攜 Python3108_for_2023.7z </a> (includes Python 3.10.8, tcc, gnuplot)</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EV5lw40RXvNFue1Cr2sivioBuOj_QA5KzAxDMU0Mkf7z8w?e=NtOJeN"> wcm_portable_w2-5.7z </a> <span> </span> (下載 220MB 解開後 880MB)</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EXvjttk-fBxOmauSgbw77EgBstfLmwy0w3eunU_osL2hRg?e=fampQ1"> miktex_portable.7z </a> <span> </span> <span> (下載 168MB 解開後 968MB) </span></p>
<hr/>
<h4>何謂可攜式 Python 程式環境?</h4>
<h4 style="padding-left: 30px;">Python 程式是如何執行的?</h4>
<p style="padding-left: 30px;">首先 Python 是一種解譯式 (Interpreted) 程式語言, 與 C 或 C++ 程式語言最大的差別是, C/C++ 程式碼通常必須透過手動編譯 (Compile) 與連結 (Link) 的過程, 將原始碼轉為可執行的格式 (在 Windows 操作系統為 .exe 檔案), 而 Python 程式寫好後, 可以直接利用解譯器執行, 使用者不需要手動執行程式碼的編譯, 而是由解譯器在執行前即時將程式碼轉換為可執行檔案.</p>
<p style="padding-left: 30px;">在 <a href="https://www.geeksforgeeks.org/internal-working-of-python/"> geeksforgeeks 網站 </a> , 以下列敘述說明 Python 程式如何執行:</p>
<p style="padding-left: 30px;">Python is an object-oriented programming language like Java. Python is called an <span style="background-color: #ffff99;"> interpreted language </span> . Python uses code modules that are interchangeable instead of a single long list of instructions that was standard for functional programming languages. The standard implementation of python is called "cpython" (以 C 程式語言編寫的 Python 解譯器). It is the default and widely used implementation of Python.</p>
<p style="padding-left: 30px;">Python doesn’t convert its code into machine code, something that hardware can understand. It actually converts it into something called <span style="background-color: #ffff99;"> byte code </span> . So within python, compilation happens, but it’s just not into a machine language. It is into byte code (.pyc or .pyo) and this byte code can’t be understood by the CPU. So we need an interpreter called the <span style="background-color: #ffff99;"> python virtual machine </span> to execute the byte codes</p>
<p style="padding-left: 30px;">針對 Python 程式的"編譯"過程, 則 <a href="https://www.geeksforgeeks.org/understanding-the-execution-of-python-program/"> 說明如下 </a> :</p>
<p style="padding-left: 30px;">The Python program is converted into byte code. Byte code is a fixed set of instructions that represent arithmetic, comparison, memory operations, etc. It can run on any operating system and hardware. The byte code instructions are created in the .pyc file. The .pyc file is not explicitly created as Python handles it internally but it can be viewed with the following command:</p>
<p style="padding-left: 60px;">Y:\tmp\python_ex&gt;python -m py_compile hello.py</p>
<p style="padding-left: 30px;">-m and py_compile represent module and module name respectively. This module is responsible to generate .pyc file. The compiler creates a directory named  __pycache__ where it stores the hello.cpython-39.pyc file (若採用 Python 3.9 版次的編譯器).</p>
<p style="padding-left: 30px;">至於針對 Python 程式的"解譯"執行過程, 則 <a href="https://www.geeksforgeeks.org/understanding-the-execution-of-python-program/"> 說明如下 </a> :</p>
<p style="padding-left: 30px;">The next step involves converting the byte code (.pyc file) into machine code. This step is necessary as the computer can understand only machine code ( <span style="background-color: #ffff99;"> binary code </span> ). Python Virtual Machine (PVM) first understands the operating system and processor in the computer and then converts it into machine code. Further, these machine code instructions are executed by processor and the results are displayed.</p>
<p style="padding-left: 30px;">However, the interpreter inside the PVM translates the program line by line thereby consuming a lot of time. To overcome this, a compiler known as Just In Time (JIT) is added to PVM. JIT compiler improves the execution speed of the Python program. This compiler is not used in all Python environments like CPython which is standard Python software.</p>
<p style="padding-left: 30px;">To execute the hello.cpython-39.pyc we can use the following command:</p>
<p style="padding-left: 60px;">Y:\tmp\python_ex&gt;python __pycache__\hello.cpython-39.pyc</p>
<p style="padding-left: 30px;">至於有關 python.exe 與 pythonw.exe 的差別, 則參見 <a href="https://stackoverflow.com/questions/9705982/pythonw-exe-or-python-exe"> 這裡的說明 </a> . 至於 SciTE 設定 python.properties 中, 使用 pythonw.exe -u 表示除了採非同步 (asynchronous) 執行模式外, 同時 force the stdout and stderr streams to be unbuffered; but has no effect on stdin.</p>
<h4 style="padding-left: 30px;">Python 解譯器的類別:</h4>
<p style="padding-left: 30px;">最早的 Python 解譯器以 C 程式語言編寫, 稱為 <a href="https://en.wikipedia.org/wiki/CPython"> CPython </a> , 以 Python 編寫的 Python 解譯器稱為 <a href="https://en.wikipedia.org/wiki/PyPy"> Pypy </a> , 以 .NET 技術編寫的 Python 解譯器稱為 <a href="https://en.wikipedia.org/wiki/IronPython"> Ironpython </a> , 以 Java 編寫的 Python 解譯器稱為 <a href="https://en.wikipedia.org/wiki/Jython"> Jython </a> , 以 Javascript 編寫的 Python 解譯器稱為 <a href="https://brython.info/"> Brython </a> . 以 Rust 編寫的 Python 解譯器稱為 <a href="https://github.com/RustPython/RustPython"> RustPython </a> .</p>
<h4 style="padding-left: 30px;">建立可攜 Python 程式環境的目的:</h4>
<p style="padding-left: 30px;">一般在 Windows 10 中使用 <a href="https://en.wikipedia.org/wiki/CPython"> CPython </a> 都是透過操作系統安裝, 將 <a href="https://en.wikipedia.org/wiki/CPython"> CPython </a> 解譯器登錄在操作系統的 <a href="https://en.wikipedia.org/wiki/Windows_Registry"> Registry </a> 中. 只不過配置在操作系統的 <a href="https://en.wikipedia.org/wiki/CPython"> CPython </a> 解譯器若在使用過程中, 透過 <a href="https://pypi.org/project/pip/"> pip </a> 安裝額外的模組後, 當電腦輔助設計室中的電腦重新開機後, 操作系統將會因為安裝防寫套件而恢復原先所安裝無額外模組的狀態.</p>
<p style="padding-left: 30px;">計算機程式、網際內容管理、電腦輔助設計與實習, 以及協同產品設計實習課程為了 <span style="background-color: #ffff99;"> 讓使用者可以隨身帶著 <a href="https://en.wikipedia.org/wiki/CPython" style="background-color: #ffff99;"> CPython </a> 解譯器 </span> , 因此繞過 Windows 10 操作系統的 Registry 登錄, 設法以批次檔案在虛擬的硬碟 (y:) 啟動 <a href="https://en.wikipedia.org/wiki/CPython"> CPython </a> 解譯環境.</p>
<p style="padding-left: 30px;">此外, 配置在 USB 隨身碟的可攜 <a href="https://en.wikipedia.org/wiki/CPython"> CPython </a> 程式環境, 除了可執行一般 Python 程式外, 也可自行安裝所需模組, 並用於 <a href="https://github.com/mdecourse/cmsimde"> cmsimde </a> 動態與靜態網站編輯.</p>
<p style="padding-left: 30px;">可攜程式環境中除 <a href="https://en.wikipedia.org/wiki/CPython"> CPython </a> , 還可配置 <a href="https://www.msys2.org/"> MSYS2 </a> C/C++ 編譯系統. 針對 <a href="https://www.scintilla.org/SciTE.html"> SciTE </a> , <a href="https://github.com/solvespace/solvespace"> Solvespace </a> , <a href="https://github.com/Range-Software/range3"> Range3 </a> , <a href="https://github.com/CoppeliaRobotics"> CoppeliaSim </a> 等開源套件執行編譯.</p>
<h4>如何建立可攜 Python 程式環境?</h4>
<p style="padding-left: 30px;">能放入 USB 隨身碟執行的 Python 程式環境包含兩個部分:</p>
<p style="padding-left: 60px;">(1) Python 解譯器系統檔案</p>
<p style="padding-left: 60px;">(2) 可攜啟動設定批次檔 (例如: <a href="http://wcm.cycu.org:88/github/wcm2022_guide/downloads/start_ipv6.bat"> start_ipv6.bat </a> )</p>
<p style="padding-left: 30px;">要在 Windows 操作系統中, 取得各版本的 Python 解譯器系統檔案, 也有兩種方法:</p>
<p style="padding-left: 60px;">(1) 從官方網站下載安裝檔 (例如: <a href="https://www.python.org/ftp/python/3.10.2/"> 3.10.2 版 </a> 的 <a href="https://www.python.org/ftp/python/3.10.2/python-3.10.2-amd64.exe"> python-3.10.2-amd64.exe) </a> , 手動安裝 Python, 取下安裝內容後, 解除安裝程式.</p>
<p style="padding-left: 60px;">(2) 利用 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/Eatd1g4iPyFFoZFlwR66DisBHx-fNimjugQ2svoXQJAWSQ?e=qrEmuR"> gen_portable_python.py </a> (或從 Gist <a href="https://gist.githubusercontent.com/mdecycu/107d8ba0ee55d2f46e613f610d9b1166/raw/5e75188838fb7845ce46b7cbda94b1c379a6281f/gen_portable_python.py"> 取下 gen_portable_python.py </a> ), 從 Python 官方網站下載基本的 .msi 檔案 (例如 <a href="https://www.python.org/ftp/python/3.10.2/amd64/"> 3.10.2 版 </a> 中的 core.msi, dev.msi, exe.msi, lib.msi, tcltk.msi 與 tools.msi), 然後利用 <a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/msiexec"> msiexec.exe </a> 配合 <a href="https://docs.microsoft.com/zh-tw/windows/win32/msi/targetdir"> targetdir </a> 屬性解開各安裝檔.</p>
<p id="pp310">以下將要結合 <a href="https://www.scintilla.org/SciTE.html"> SciTE </a> , <a href="https://github.com/TinyCC/tinycc"> Tiny C Compiler </a> 與 <a href="https://www.python.org/ftp/python/3.10.2/"> Python 3.10.2 </a> , 建立一個可攜版的 CPython 與 <a href="https://en.wikipedia.org/wiki/ANSI_C"> ANSI C </a> 執行環境.</p>
<ol>
<li>從 <a href="http://download.savannah.gnu.org/releases/tinycc/"> http://download.savannah.gnu.org/releases/tinycc/ </a> 下載 <a href="http://download.savannah.gnu.org/releases/tinycc/tcc-0.9.27-win64-bin.zip"> tcc-0.9.27-win64-bin.zip </a> .</li>
<li>從 <a href="https://www.scintilla.org/SciTEDownload.html"> https://www.scintilla.org/SciTEDownload.html </a> 下載 <a href="https://www.scintilla.org/wscite521.zip"> wscite521.zip </a> .</li>
<li>利用 Python 3.9.5 (或先前的 Python3 舊版可攜程式) 執行 <a href="http://wcm.cycu.org:88/github/wcm2022_guide/downloads/gen_portable_python.py"> gen_portable_python.py </a> 取得 Python310 解譯器系統檔案.</li>
<li>根據上述流程建立的基本 Python 與 ANSI C 可攜程式系統 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ETQ0bIB9Vs1CloTwDiqnMO0BV_SCXVQUmfPd3sANXqF1ZA?e=bpP7C0"> Portable_py310_tcc.7z </a> (for @nfu users only, 此一 Python 解譯器只帶有基本模組且尚未安裝 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EUaDMWggjIZAiFSVjo-otN8BuZe0GpaAio4J_NRzz39tRA?e=9FhCRC"> get-pip.py </a> )</li>
<li>此一 Python 解譯器以 python <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EUaDMWggjIZAiFSVjo-otN8BuZe0GpaAio4J_NRzz39tRA?e=9FhCRC"> get-pip.py </a> 安裝 pip 後, 再以 pip install flask flask_cors bs4 lxml pelican markdown leo pyopenssl 安裝 <a href="https://mde.tw/cmstemplate/content/CMSiMDE.html"> cmsimde 所需模組 </a> 後, 即可用於 wcm2022 動態與靜態系統的編輯.</li>
<li>此一 Python 解譯器再結合 <a href="https://git-scm.com/download/win"> Portablegit </a> 與 <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html"> PUTTY </a> , 就可以支援以 <a href="https://mde.tw/wcm2022_guide/content/Token%20and%20SSH.html"> SSH </a> 執行 github 倉儲的 git push.</li>
</ol>
<h4>如何建立網際 Python 程式環境 (Brython)?</h4>
<p style="padding-left: 30px;">例如: <a href="https://mde.tw/wcm2022_guide/content/run.html"> run </a> 頁面.</p>
<p>從 <a href="https://drive.google.com/file/d/1TMPsHz6G01-pxkvXf9NFM8nFdtCHQv8D/view?usp=sharing"> portable_python_wcm2022.7z </a> 下載的可攜程式環境有哪些功能?</p>
<p><span style="background-color: #ffff99;"> 請注意: 以下的 .7z 檔案下載, 只允許在系上網段上下載 </span> .</p>
<ol>
<li><a href="http://wcm.cycu.org:88/compile_copsim_cd2022.7z"> compile_copsim_cd2022.7z </a> (file size: 5 GB, extracted size: 17.3 GB, 包含除了 NX1980 之外的所有課程相關可攜程式套件, 是專門為 <a href="https://mde.tw/cd2022"> cd2022 </a> 課程學員打造的套件).</li>
<li><a href="http://wcm.cycu.org:88/portable_python_wcm2022.7z"> portable_python_wcm2022.7z </a> (file size: 513 MB, extracted size: 2.3 G, 這是專門為 <a href="https://mde.tw/wcm2022"> wcm2022 </a> 課程打造的可攜程式套件, 適合選修學員下載後在任何 Windows 10 中以隨身碟啟動後操作)</li>
</ol>
<p>Web-based camera:</p>
<p>將 Webcam 接到電腦, 設定電腦可連外的 IP address, pip install flask flask_cors opencv-python 後, 執行下列程式, 就可以透過 <a href="https://your_computer_ip_address/showimage"> https://your_computer_ip_address/showimage </a> 看到 webcam 畫面.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">#pip install flask flask_cors opencv-python
# https://your_computer_ip_address/showimage
from flask import Flask, send_from_directory, request, redirect, \
    render_template, session, make_response, url_for, flash, Response
from flask_cors import CORS
import sys
import os
import cv2
import socket
 
app = Flask(__name__)
CORS(app, support_credentials=False)
 
@app.route('/')
def index():
    return "index"
 
@app.route("/video_feed")
def video_feed():
    return Response(getimage(), mimetype="multipart/x-mixed-replace; boundary=frame")
 
@app.route("/showimage")
def showimage():
    return '''
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Stream&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Video Stream&lt;/h1&gt;
        &lt;img src="/video_feed" width="720" height="540"&gt;&lt;/img&gt;
    &lt;/body&gt;
&lt;/html&gt;
'''
 
def getimage():
    cap = cv2.VideoCapture(0)
 
    '''
        #Check whether user selected camera is opened successfully.
        if not (cap.isOpened()):
            print('Could not open video device')
        else:
            print('Video device opened')
        '''
 
    cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
    cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)
 
    while True:
        ret, frame = cap.read()
        # 將圖片轉為灰階
        #gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        #cv2.imwrite('test.jpg', frame)
        ret, jpeg = cv2.imencode('.jpg', frame)
        #jpeg.tobytes()
        yield (b'--frame\r\n'
        b'Content-Type: image/jpeg\r\n\r\n' + jpeg.tobytes() + b'\r\n')
    return "getimage"
 
if __name__ == "__main__":
    #ipv6_address = socket.getaddrinfo("domain.name", 0, socket.AF_INET6)[0][4][0]
    ip = "your_computer_ip_address"
    port = 443
    app.run(host=ip, port=port, debug=True, ssl_context="adhoc")
    #app.run()</pre>
<p></p>
<h2>Projects</h2>
<p>1. <span style="background-color: #ffff99;">鋼球廻路運動系統</span>設計與模擬:</p>
<p style="padding-left: 30px;">零組件設計繪圖、感測器、電磁場控制系統.</p>
<p style="padding-left: 30px;"><a href="https://www.geekymine.com/products/perpetual-motion-machine-balancing-gadget">https://www.geekymine.com/products/perpetual-motion-machine-balancing-gadget</a> </p>
<p style="padding-left: 30px;"><a href="https://youtu.be/FPQjF6tQOlg">https://youtu.be/FPQjF6tQOlg</a> (What's Inside Perpetual Motion Machine?)</p>
<p style="padding-left: 30px;"><a href="https://youtu.be/trC5Dg3Vpi0">https://youtu.be/trC5Dg3Vpi0</a> (How a Perpetual Motion Marble Machine Works)</p>
<p style="padding-left: 30px;"><a href="https://youtu.be/lzI2_qRHItM">https://youtu.be/lzI2_qRHItM</a>, <a href="https://youtu.be/EveiOU8wQpA">https://youtu.be/EveiOU8wQpA</a> (using <a href="https://www.blender.org/">Blender 3D</a>)</p>
<p style="padding-left: 30px;"><a href="https://iopscience.iop.org/article/10.1088/1742-6596/1804/1/012139/pdf">Simulation of Hall Effect in Semiconductor for Current Sensors Applications</a></p>
<p>2. <span style="background-color: #ffff99;">鋼球平衡系統</span>設計與模擬：</p>
<p style="padding-left: 30px;">電腦輔助機電控制系統設計、感測器、機電控制系統設計.</p>
<p style="padding-left: 30px;"><a href="http://www.diva-portal.org/smash/get/diva2:1373784/FULLTEXT01.pdf">Construction and theoretical study of a ball balancing platform</a></p>
<p style="padding-left: 30px;"><a href="https://www.instructables.com/PID-Controlled-Ball-Balancing-Stewart-Platform/">https://www.instructables.com/PID-Controlled-Ball-Balancing-Stewart-Platform/</a> </p>
<p style="padding-left: 30px;"><a href="https://acrome.net/post/the-basics-of-the-ball-balancing-table">https://acrome.net/post/the-basics-of-the-ball-balancing-table</a> </p>
<p style="padding-left: 30px;"><a href="https://youtu.be/nlHNWV8WBXA">https://youtu.be/nlHNWV8WBXA</a> (Getting Started to Controlling a Ball Balancing Table)</p>
<p style="padding-left: 60px;"><a href="https://web.altair.com/system-dynamics-and-controls-using-altair-compose">https://web.altair.com/system-dynamics-and-controls-using-altair-compose</a> </p>
<p style="padding-left: 60px;"><a href="https://www.embeddedindia.com/download/Ball_Balancing_Table_Datasheet.pdf">https://www.embeddedindia.com/download/Ball_Balancing_Table_Datasheet.pdf</a> </p>
<p style="padding-left: 60px;"><a href="https://altair.com/students/">https://altair.com/students/</a> (Compose studen edition)</p>
<p style="padding-left: 30px;"><a href="https://forum.coppeliarobotics.com/viewtopic.php?t=8177">Joint callback function for customed controller</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/Ball-Balancing-Machine">https://github.com/mdecycu/Ball-Balancing-Machine</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/Ball-and-Plate-System">https://github.com/mdecycu/Ball-and-Plate-System</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/Chandan-nyk/Plane-Balancing-System-with-2-DOF">https://github.com/Chandan-nyk/Plane-Balancing-System-with-2-DOF</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/giusenso/Ball-Balancing-PID-System">https://github.com/giusenso/Ball-Balancing-PID-System</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/JohanLink/Ball-Balancing-PID-System">https://github.com/JohanLink/Ball-Balancing-PID-System</a> </p>
<p>3. <span style="background-color: #ffff99;">虛實整合彈珠檯</span>設計與模擬：</p>
<p style="padding-left: 30px;">實體球檯設計繪圖、實體鋼珠彈射系統、實體擊錘按鈕、實體電磁鐵、電腦與機電控制系統、虛擬彈珠平台整合.</p>
<p style="padding-left: 30px;"><a href="https://youtu.be/ZJQV2FlGFBo">https://youtu.be/ZJQV2FlGFBo</a> (Arduino + compass+ PSD sensor +V-REP simulation)</p>
<p>我們能夠利用電腦輔助設計流程, 在網際虛擬場景中設計一個酷炫的機電資整合技術下的彈珠檯遊戲環境嗎?</p>
<p><a href="http://mjrnet.org/pinscape/BuildGuideV2">http://mjrnet.org/pinscape/BuildGuideV2</a> </p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/4CuMVrOCjBU" title="YouTube video player" width="560"></iframe></p>
<p>References:</p>
<p style="padding-left: 30px;"><a href="https://youtu.be/mcLs7kBEwfI">https://youtu.be/mcLs7kBEwfI</a></p>
<p style="padding-left: 30px;"><a href="https://www.ipdb.org/search.pl">https://www.ipdb.org/search.pl</a> (Internet pinball database)</p>
<p style="padding-left: 30px;"><a href="https://www.funwithpinball.com/resources/patents">pinball patents</a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/R0DXlcbVsWg">https://youtu.be/R0DXlcbVsWg</a> (5 reasons why virtual pinball is better than the real thing)</p>
<p style="padding-left: 60px;"><a href="https://pinballcastle.com/virtual-pinball-vs-real-machines/">https://pinballcastle.com/virtual-pinball-vs-real-machines/</a></p>
<p style="padding-left: 30px;"><a href="http://mjrnet.org/pinscape/BuildGuideV2/BuildGuide.php">http://mjrnet.org/pinscape/BuildGuideV2/BuildGuide.php</a></p>
<p style="padding-left: 60px;"><a href="http://mjrnet.org/pinscape/">http://mjrnet.org/pinscape/</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mjrgh/PinballY/">https://github.com/mjrgh/PinballY/</a></p>
<p style="padding-left: 60px;"><a href="https://en.wikipedia.org/wiki/Visual_Pinball">https://en.wikipedia.org/wiki/Visual_Pinball</a></p>
<p style="padding-left: 90px;"><a href="https://youtu.be/9Z6P6p2mRIA">https://youtu.be/9Z6P6p2mRIA</a> (How To Make Your Own Pinball Machine In Visual Pinball - Crash Course)</p>
<p style="padding-left: 60px;"><a href="https://youtu.be/NZKRtjsFJWI">https://youtu.be/NZKRtjsFJWI</a></p>
<p style="padding-left: 60px;"><a href="https://www.vpforums.org/">https://www.vpforums.org/</a></p>
<p style="padding-left: 60px;"><a href="https://futurepinball.com/">https://futurepinball.com/</a></p>
<p style="padding-left: 90px;"><a href="https://youtu.be/F_yxEexFBl4">https://youtu.be/F_yxEexFBl4</a></p>
<p style="padding-left: 30px;"><a href="http://www.performancepinball.com/rebuilding-pop-bumpers.html">http://www.performancepinball.com/rebuilding-pop-bumpers.html</a></p>
<p style="padding-left: 30px;"><a href="https://www.researchgate.net/publication/252341764_Programming_Pinball_Machines_for_Fun_and_Education">Programming Pinball Machines for Fun and Education</a></p>
<p style="padding-left: 30px;"><a href="https://www.funwithpinball.com/">https://www.funwithpinball.com/</a></p>
<p style="padding-left: 30px;"><a href="https://mercimichel.medium.com/ouigo-lets-play-case-study-b763f69dd89c">https://mercimichel.medium.com/ouigo-lets-play-case-study-b763f69dd89c</a> </p>
<p style="padding-left: 30px;"><a href="https://dl.acm.org/doi/10.1145/1822348.1822380">Implementing games on pinball machines</a></p>
<p style="padding-left: 30px;"><a href="https://www.instructables.com/Arduino-Pinball-Machine-That-Plays-Itself/">https://www.instructables.com/Arduino-Pinball-Machine-That-Plays-Itself/</a> </p>
<p style="padding-left: 30px;"><a href="https://betterprogramming.pub/using-ai-to-automate-a-pinball-machine-ef5721141f03">https://betterprogramming.pub/using-ai-to-automate-a-pinball-machine-ef5721141f03</a> </p>
<p style="padding-left: 30px;"><a href="https://www.uc.edu/news/articles/n20938843/electrical-engineering-professor-uses-pinball-machines-as-a-teaching-tool.html">https://www.uc.edu/news/articles/n20938843/electrical-engineering-professor-uses-pinball-machines-as-a-teaching-tool.html</a> </p>
<p style="padding-left: 60px;"><a href="https://www.uc.edu/campus-life/honors/students/experiences/seminars/seminar-spotlights/eece2001c.html">https://www.uc.edu/campus-life/honors/students/experiences/seminars/seminar-spotlights/eece2001c.html</a> </p>
<p style="padding-left: 60px;"><span>Pinball machine design leverages tools from electrical engineering, computer science, and industrial design to create an immersive world under glass. Each discipline contributes an additional dimension to the experience, and the fusion of all these elements together creates a unique media for storytelling that sits at the crossroads of video games, robotics and kinetic art. This course explores the underlying engineering and design concepts that go into a complete pinball machine and how they work together to build a theme and tell a story. Each lesson of the course and corresponding lab will address a practical electrical circuit design, physical design, prototyping, or programming concept as it related to an element of the pinball playfield. Each of these topics will be taught at an accessible level for students outside of the engineering and design programs. Over the course of the semester, the students will add components to the machine while also writing the corresponding computer code. At the end of the semester, each team of students will have created a complete pinball machine.</span></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/dy7oVSNtaRk">https://youtu.be/dy7oVSNtaRk</a> </p>
<p style="padding-left: 30px;"><a href="https://hades.mech.northwestern.edu/index.php/Baseball">https://hades.mech.northwestern.edu/index.php/Baseball</a> </p>
<p style="padding-left: 30px;"><a href="https://www.pinballshop.nl/electronics-parts/">https://www.pinballshop.nl/electronics-parts/</a> </p>
<p style="padding-left: 60px;"><a href="https://www.kineticist.co/post/who-makes-pinball-machines">https://www.kineticist.co/post/who-makes-pinball-machines</a> </p>
<p style="padding-left: 60px;"><a href="https://sourceforge.net/projects/vpinball/">virtual pinball machine</a> (<a href="https://futurepinball.com/">future pinball</a>, <a href="http://mjrnet.org/pinscape/BuildGuideV2/">guide</a>)</p>
<p style="padding-left: 60px;"><a href="https://www.dimensions.com/element/pinball-machines">pinball machine dimensions</a></p>
<p style="padding-left: 60px;"><a href="https://sternpinball.com/wp-content/uploads/2018/11/24Manual.pdf">pinball manual.pdf</a></p>
<p style="padding-left: 90px;"><a href="https://sternpinball.com/wp-content/uploads/2019/06/ACDC_Pro_web.pdf">AC/DC manual.pdf</a> (<a href="https://sternpinball.com/wp-content/uploads/2019/06/ACDC_Prem_web.pdf">pro</a>, <a href="https://sternpinball.com/support/game-manuals/">various manual</a>)</p>
<p style="padding-left: 60px;"><a href="https://www.marcospecialties.com/pinball-parts/PB116">27mm steel ball</a> (80g)</p>
<p style="padding-left: 60px;"><a href="https://www.marcospecialties.com/pinball-parts/A-16883-4">pushbutton</a></p>
<p style="padding-left: 60px;"><a href="https://www.marcospecialties.com/pinball-parts/COIL">coils and windings</a></p>
<p style="padding-left: 60px;"><a href="https://www.marcospecialties.com/pinball-parts/ELEC">electrical and electronics</a></p>
<p style="padding-left: 60px;"><a href="https://www.marcospecialties.com/pinball-parts/LAMP">lamps and leds</a></p>
<p style="padding-left: 60px;"><a href="https://www.marcospecialties.com/pinball-parts/PINSCORE">pinscores</a></p>
<p style="padding-left: 60px;"><a href="https://www.marcospecialties.com/pinball-parts/MECH">playfield machinery</a></p>
<p style="padding-left: 30px;"><a href="https://projecthub.arduino.cc/grahamasker/build-a-pinball-machine-720f06"> https://projecthub.arduino.cc/grahamasker/build-a-pinball-machine-720f06 </a></p>
<p style="padding-left: 30px;"><a href="https://pinballdesign.com/"> https://pinballdesign.com/ </a></p>
<p style="padding-left: 60px;"><a href="https://calibre-ebook.com/download_portable">https://calibre-ebook.com/download_portable</a></p>
<p style="padding-left: 30px;"><a href="https://altair.com/newsroom/articles/Anyone-Can-Become-a-Pinball-Wizard-with-Model-based-Development">https://altair.com/newsroom/articles/Anyone-Can-Become-a-Pinball-Wizard-with-Model-based-Development</a></p>
<p style="padding-left: 30px;"><a href="https://www.solidsolutions.co.uk/blog/2016/03/pinball-machine-using-event-based-motion/">https://www.solidsolutions.co.uk/blog/2016/03/pinball-machine-using-event-based-motion/</a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/sUSQb0Bh_M4">https://youtu.be/sUSQb0Bh_M4 </a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/NWry1RlA08c"> https://youtu.be/NWry1RlA08c </a></p>
<hr/>
<p><a href="https://link.springer.com/book/10.1007/978-94-007-8552-6"> 2014 The Motor Car </a></p>
<p><a href="https://link.springer.com/book/10.1007/978-3-319-17494-5"> 2015 A Solar Car Primer </a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-7026-4"> 2021 The Future of the Automotive Industry </a></p>
<p><a href="https://github.com/jscad/OpenJSCAD.org"> https://github.com/jscad/OpenJSCAD.org </a></p>
<p style="padding-left: 30px;"><a href="https://en.wikibooks.org/wiki/OpenJSCAD_User_Guide"> https://en.wikibooks.org/wiki/OpenJSCAD_User_Guide </a></p>
<p>Arduino DC Motor Control: <a href="https://www.tutorialspoint.com/arduino/arduino_dc_motor.htm"> https://www.tutorialspoint.com/arduino/arduino_dc_motor.htm </a></p>
<p>Arduino AC Motor Control: <a href="https://projecthub.arduino.cc/microst/control-a-220vac-universal-ac-motor-with-arduino-fe037e"> https://projecthub.arduino.cc/microst/control-a-220vac-universal-ac-motor-with-arduino-fe037e </a></p>
<p>2023 電腦輔助設計專案</p>
<p style="padding-left: 30px;">4x4 Rremote Control Car</p>
<p style="padding-left: 30px;">Example Parts List:</p>
<p style="padding-left: 60px;">2– <a href="https://store.arduino.cc/products/arduino-uno-rev3"> Arduino UNO </a> <br/> <br/> 2 - <a href="https://www.sparkfun.com/datasheets/Components/SMD/nRF24L01Pluss_Preliminary_Product_Specification_v1_0.pdf"> NRF24L01 modules </a> (Remote Transmitter and Receiver pair) <br/> <br/> 1 – breadboard <br/> <br/> 1 – 12V battery (YUASA 不斷電系統電池/NP1.2-12) <br/> <br/> 4 – Wheels and Motors ( <a href="https://www.farnell.com/datasheets/3719802.pdf"> 12V Brushed DC Motors </a> ) <br/> <br/> 2 – <a href="https://www.ti.com/product/L293D"> L293D Motor driver </a> (4.5V-36V) <br/> <br/> 1 – small box for remote <br/> <br/> 4 – Switches <br/> <br/> 4 – NiMH/NiCd battery (for remote) <br/> <br/> 4 – 10k resistors <br/> <br/> 1 - 5v regulator <br/> <br/> 2 - 470uF 16v <br/> <br/> 2 - 0.1uF Multilayer Monolithic Ceramic Capacitor</p>
<p>Reference:</p>
<p style="padding-left: 30px;"><a href="https://www.instructables.com/Make-a-4WD-RC-car/"> https://www.instructables.com/Make-a-4WD-RC-car/ </a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/PHdtGIrSu4o"> https://youtu.be/PHdtGIrSu4o </a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/ZFEtGOIzGvo"> https://youtu.be/ZFEtGOIzGvo </a></p><h3>Modeling</h3>
<p><a href="https://www.sciencedirect.com/science/article/pii/S0307904X08001819"> 2009 Dynamic modelling of an intermittent slider–crank mechanism </a></p>
<p style="padding-left: 30px;">This paper investigates kinematic and dynamic analyses of a novel intermittent slider– <br/> crank mechanism, which consists of four parts: a crank, a connecting rod associated with <br/> a pneumatic cylinder, a slider and two stops at both ends of a stroke. When the crank <br/> rotates continuously, the slider will contact with the stops and the pneumatic cylinder is <br/> compressed or extended. One periodic motion of the intermittent slider–crank mechanism <br/> driven by a permanent magnetic (PM) synchronous servomotor could be divided into three <br/> stages. Three governing equations are formulated by Hamilton’s principle. A spring model <br/> instead of the pneumatic cylinder is also used for comparison. Finally, the transient ampli- <br/> tudes obtained by using Runge–Kutta method are compared with those of the conventional <br/> slider–crank mechanism.</p>
<h3>Simulate</h3>
<p><a href="https://github.com/mdecycu/pages">Physics</a> (<a href="https://www.youtube.com/c/TenMinutePhysics">Videos</a>, <a href="https://youtu.be/NhVUCsXp-Uo">Pinball</a>)</p>
<p><a href="https://apps.apple.com/us/app/williams-pinball/id1406370101">Classic pinball perfection on App Store</a></p>
<p><a href="https://github.com/CoppeliaRobotics/models/blob/master/examples/spring-damper.ttm">Spring</a> (<a href="https://forum.coppeliarobotics.com/viewtopic.php?t=5832">throgh API</a>)</p>
<p><a href="https://forum.coppeliarobotics.com/viewtopic.php?t=1501">Electromagnetic</a> (<a href="https://ece.mst.edu/media/academic/ece/documents/coursenotes/ee3501electromechanics-new/EE3501_04__Solenoid__Simulink_.pdf">mathematical model</a>) </p>
<p style="padding-left: 30px;"><a href="https://www.researchgate.net/publication/329332784_Modelling_and_Simulation_of_a_Controlled_Solenoid">https://www.researchgate.net/publication/329332784_Modelling_and_Simulation_of_a_Controlled_Solenoid</a></p>
<h2>機電系統設計與模擬</h2>
<h4>Mechatronic system design and simulation</h4>
<p style="padding-left: 30px;"><a href="https://pressbooks.bccampus.ca/engineeringsystems/chapter/introduction/">https://pressbooks.bccampus.ca/engineeringsystems/chapter/introduction/</a> </p>
<p style="padding-left: 60px;"><img alt="" height="201" src="/images/mordern_design_process.png" width="400"/></p>
<p style="padding-left: 60px;">Modern Design Process</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-662-49004-4">Mechatronics by Bond Graphs</a></p>
<p style="padding-left: 30px;"><a href="https://www3.math.tu-berlin.de/numerik/MoRTransPhen/materials/Breedveld/BreedveldChapter.pdf">Bond Graph Modelling of Engineering Systems</a></p>
<p style="padding-left: 30px;"><a href="https://web.mat.upc.edu/carles.batlle/MOSS/broenink.pdf">Introduction to Physical Systems Modelling with Bond Graphs</a></p>
<p style="padding-left: 30px;"><a href="https://www.researchgate.net/publication/255027172_Modeling_and_Simulation_of_Dynamic_Systems_using_Bond_Graphs">Modeling and Simulation of Dynamic Systems using Bond Graphs</a></p>
<p style="padding-left: 30px;"><a href="https://theses.gla.ac.uk/1140/1/2005vinkphd.pdf">Aspects of Bond Graph Modeling in Control</a></p>
<p style="padding-left: 30px;"><a href="https://www.diva-portal.org/smash/get/diva2:218737/FULLTEXT01.pdf">Modeling and Simulation of Physical Systems in a Mechatronic Context</a></p>
<p style="padding-left: 30px;"><a href="https://royalsocietypublishing.org/doi/10.1098/rsif.2022.0492">Energy-based advection modelling using bond graphs</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/BondGraphTools">https://github.com/mdecycu/BondGraphTools</a></p>
<p style="padding-left: 30px;"><a href="https://arxiv.org/pdf/1906.10799.pdf">Computer-aided modelling of complex physical systems with BondGraphTools</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/gawthrop/BondGraphTools-Biomolecular">https://github.com/gawthrop/BondGraphTools-Biomolecular</a></p>
<p style="padding-left: 30px;"><a href="https://www.biorxiv.org/content/10.1101/2021.03.24.436763v2.full.pdf">Analysing and simulating energy-based models in biology using BondGraphTools</a></p>
<p style="padding-left: 30px;"><a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0269497">A semantics, energy-based approach to automate biomodel composition</a></p>
<p style="padding-left: 30px;"><a href="https://bondgraphtools.readthedocs.io/en/latest">https://bondgraphtools.readthedocs.io/en/latest</a></p>
<p style="padding-left: 30px;"><a href="https://ntrs.nasa.gov/api/citations/20040085773/downloads/20040085773.pdf">AUTOMATED MODELING AND SIMULATION USING THE BOND GRAPH METHOD FOR THE AEROSPACE INDUSTRY</a></p>
<p style="padding-left: 30px;"><a href="https://www.cse.sc.edu/~jianjunh/paper/GPBG2008.pdf">GPBG: A Framework for Evolutionary Synthesis of Multi-domain Engineering Systems</a></p>
<p style="padding-left: 30px;"><a href="https://www.cse.sc.edu/~jianjunh/paper/ijcss_gpbg.pdf">Automated Design Approaches for Multi-Domain Dynamic Systems Using Bond Graphs and Genetic Programming</a></p>
<p style="padding-left: 30px;"><a href="https://www.cse.sc.edu/~jianjunh/paper/mechatronics_gpbg.pdf">Toward an Automated Design Method for Multi-Domain Dynamic Systems Using Bond Graphs and Genetic Programming</a></p>
<p style="padding-left: 30px;"><a href="https://www.cse.sc.edu/~jianjunh/paper/gecco2003_mems.pdf">System-Level Synthesis of MEMS via Genetic Programming and Bond Graphs</a></p>
<p style="padding-left: 30px;"><a href="https://www.cse.sc.edu/~jianjunh/publication.htm">https://www.cse.sc.edu/~jianjunh/publication.htm</a></p>
<p style="padding-left: 30px;"><a href="https://www.bondsimulation.com/">https://www.bondsimulation.com/</a></p>
<p>Syllabus:</p>
<p>1 系統模型簡介 (Introduction to Models of Systems)</p>
<p style="padding-left: 30px;">1.1 系統、子系統與元件 (Systems, Subsystems, and Components)</p>
<p style="padding-left: 30px;">1.2 狀態取決系統 (State-Determined Systems)</p>
<p style="padding-left: 30px;">1.3 動態模型用途 (Uses of Dynamic Models)</p>
<p style="padding-left: 30px;">1.4 線性與非線性系統 (Linear and Nonlinear Systems)</p>
<p style="padding-left: 30px;">1.5 自動模擬 (Automated Simulation)</p>
<p>2 系統模型 (System Models)</p>
<p style="padding-left: 30px;">2.1 電機系統 (Electrical Systems)</p>
<p style="padding-left: 60px;">2.1.1 電路 (Electrical Circuits)</p>
<p style="padding-left: 60px;">2.1.2 電網路 (Electrical Networks)</p>
<p style="padding-left: 30px;">2.2 機械系統 (Mechanical Systems)</p>
<p style="padding-left: 60px;">2.2.1 平移力學 (Mechanics of Translation)</p>
<p style="padding-left: 60px;">2.2.2 固定軸旋轉 (Fixed-Axis Rotation)</p>
<p style="padding-left: 60px;">2.2.3 平面運動 (Plane Motion)</p>
<p>3 狀態方程式與自動模擬 (State-Space Equations and Automated Simulation)</p>
<p style="padding-left: 30px;">3.1 系統方程標準式 (Standard Form for System Equations)</p>
<p style="padding-left: 30px;">3.2 輸出變數推導 (Output Variable Formulation)</p>
<p style="padding-left: 30px;">3.3 非線性與自動模擬 (Nonlinear and Automated Simulation)</p>
<p>4 線性系統分析與控制 (Analysis and Control of Linear Systems)</p>
<p style="padding-left: 30px;">4.1 微分方程式解題 (Solution Techniques for ODE)</p>
<p style="padding-left: 30px;">4.2 自由響應與特徵值 (Free Response and Eigenvalues)</p>
<p style="padding-left: 30px;">4.3 單階系統範例 (First-Order Examples)</p>
<p style="padding-left: 30px;">4.4 二階系統範例 (Second-Order Examples)</p>
<p>5  傳感器、放大器與相關儀器 (Transducers, Amplifiers, and Instruments)</p>
<p style="padding-left: 30px;">5.1 功率傳感器 (Power Transducers)</p>
<p style="padding-left: 30px;">5.2 儲能傳感器 (Energy-Storing Transducers)<br/><br/>5.3 放大器與儀器 (Amplifiers and Instruments)</p>
<p>6 課程總結 (Course Summary)</p>
<h3>Mechanical</h3>
<p><a href="https://github.com/briannwhite/mechapy">https://github.com/briannwhite/mechapy </a></p>
<p><a href="https://github.com/DarioArzaba/PythonStandalonePrograms">https://github.com/DarioArzaba/PythonStandalonePrograms </a></p>
<p><a href="https://github.com/RCmags/FourBarSimulation">https://github.com/RCmags/FourBarSimulation </a></p>
<h4>Dynamics</h4>
<p><a href="https://moorepants.github.io/learn-multibody-dynamics/index.html">https://moorepants.github.io/learn-multibody-dynamics/index.html </a> (<a href="https://moorepants.github.io/learn-multibody-dynamics/learnmultibodydynamics.pdf">pdf</a>)</p>
<h3>Electronics</h3>
<p><a href="https://youtu.be/WlUOr4z3Lbs">https://youtu.be/WlUOr4z3Lbs</a> (Electronics Fundamentals)</p>
<h2>虛實整合系統設計</h2>
<p>Cyber-physical integration system design</p>
<p><a href="https://www.geeksforgeeks.org/introduction-to-cyber-physical-system/">https://www.geeksforgeeks.org/introduction-to-cyber-physical-system/</a></p>
<p><a href="https://youtu.be/7pLoepM6i2s">The Challenges of Cyber-Physical Systems</a> (<a href="https://www.anii.org.uy/workshopuruguay/presentations/Kumar-PR.pdf">pdf</a>)</p>
<p><a href="https://library.oapen.org/handle/20.500.12657/23293">Machine Learning for Cyber-Physical Systems</a></p>
<p><a href="https://ieeexplore.ieee.org/document/6198309">Centennial Special Issue of IEEE</a></p>
<p style="padding-left: 30px;">Cyber-physical system (CPS) represents an important and growing field that links the computer, communications, and controls areas with the physical world in such areas as aerospace, medical, automotive, energy as well as other areas. In this section, composed of two papers, the biggest<br/>challenges of CPS are explored including their inherent complexity, which makes it more difficult to design and develop software systems.</p>
<p style="padding-left: 30px;">The first paper, <a href="https://ieeexplore.ieee.org/abstract/document/6176187">Cyber-physical systems: A perspective at the centennial</a> [by Kim and Kumar] surveys cyber-physical systems and the potential benefits of the convergence of computing, communications, and control technologies for developing next-generation engineered systems. The second paper, <a href="https://ieeexplore.ieee.org/document/6187688">A cyber-physical future</a> [by Rajkumar] looks at the future technical challenges in this field.</p>
<p>Syllabus:</p>
<p>1 虛實系統簡介 (Introduction to Cyber-physical Systems)</p>
<p style="padding-left: 30px;">1.1 網路背景 (Background on Networking)</p>
<p style="padding-left: 30px;">1.2 資訊安全 (Information Security)</p>
<p style="padding-left: 30px;">1.3 系統控制原理 (Control Systems Theory)</p>
<p>2 跨網路運算 (Computing across Networks)</p>
<p style="padding-left: 30px;">2.1 網路協定層 (Networks Protocol Layers)</p>
<p style="padding-left: 30px;">2.2 網路服務模型 (Network Service Models)</p>
<p style="padding-left: 30px;">2.3 OSI 與網際網路協定 (OSI and Internet Protocols)</p>
<p>3 系統整合控制 (System Integration Control)</p>
<p style="padding-left: 30px;">3.1 系統整合原理 (System Integration Theory)</p>
<p style="padding-left: 30px;">3.2 系統狀態方程式 (System State-space Equations)</p>
<p style="padding-left: 30px;">3.3 回授系統與控制 (Feedback System and Control)</p>
<p>4 系統通訊 (System Communication)</p>
<p style="padding-left: 30px;">4.1 Websockets 與雙工通訊 (Websockets and Duplex Communication)</p>
<p style="padding-left: 30px;">4.2 高速同步併發通訊 (ZeroMQ Communication)</p>
<p style="padding-left: 30px;">4.3 通訊安全 (Communication Security)</p>
<p>5 智能系統 (Smart Systems)</p>
<p style="padding-left: 30px;">5.1 遠距與跨度裝置 (Far Reaching and Span Devices)</p>
<p style="padding-left: 30px;">5.2 智能汽車系統 (Smart Vehicle Systems)</p>
<p style="padding-left: 30px;">5.3 智能建築系統 (Smart Buildings Systems)</p>
<p>6 移動運算與課程總結 (Mobile Computing and Course Summary)</p>
<p>References:</p>
<p style="padding-left: 30px;"><a href="https://youtu.be/pdhyniSDhZk">https://youtu.be/pdhyniSDhZk</a></p>
<p style="padding-left: 60px;"><img alt="" height="202" src="/images/generator_on_CPS.png" width="400"/></p>
<p style="padding-left: 60px;">Generator (發電機) - Electromechanical System</p>
<p style="padding-left: 60px;">Contactor (接觸器) - Mechanical System</p>
<p style="padding-left: 60px;">Bus (匯流排) - Electrical System</p>
<p style="padding-left: 60px;">PID - Control System</p>
<p style="padding-left: 60px;">Supervisor - Software System</p>
<p style="padding-left: 60px;">Switch - Human Computer Interface</p>
<p style="padding-left: 60px;">Switch to Supervisor - Communication Network</p>
<p style="padding-left: 60px;"><a href="https://youtu.be/0fG22fQMoW4">https://youtu.be/0fG22fQMoW4</a></p>
<p style="padding-left: 60px;"><a href="https://youtu.be/nhJsppT45_0">https://youtu.be/nhJsppT45_0</a></p>
<p style="padding-left: 30px;"><a href="https://omscs.gatech.edu/cs-6263-intro-cyber-physical-systems-security-course-videos">CS 6263: Intro to Cyber Physical Systems Security Course Videos</a></p>
<p style="padding-left: 30px;"><a href="https://omscs.gatech.edu/cs-7639-cyber-physical-design-and-analysis-course-videos">CS 7639: Cyber-Physical Design and Analysis</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/thiagoralves/OpenPLC_v3">https://github.com/thiagoralves/OpenPLC_v3</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/thiagoralves/OpenPLC_Editor">https://github.com/thiagoralves/OpenPLC_Editor</a></p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/article/10.1007/s10015-020-00635-1">OpenPLC based control system testbed for PLC whitelisting system</a></p>
<p style="padding-left: 30px;"><a href="https://openplcproject.com/">https://openplcproject.com/</a></p>
<p style="padding-left: 30px;"><a href="http://hades.mech.northwestern.edu/images/e/e3/EmbeddedComputingMechatronicsSampleChapters.pdf">http://hades.mech.northwestern.edu/images/e/e3/EmbeddedComputingMechatronicsSampleChapters.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://espace2.etsmtl.ca/id/eprint/25420/1/St-Onge-D-2022-25420--978-981-19-1983-1.pdf">Foundations of Robotics: A Multidisciplinary Approach with Python and ROS</a></p>
<p></p>
<h2>深度學習</h2>
<p><a href="https://zh.d2l.ai/">https://zh.d2l.ai/</a> (簡體中文版)</p>
<p><a href="https://d2l.ai/">https://d2l.ai/</a> (英文版)</p>
<p><a href="https://github.com/SachaIZADI/Seven-Segment-OCR">https://github.com/SachaIZADI/Seven-Segment-OCR</a></p>
<p><a href="https://github.com/ultralytics/yolov5">https://github.com/ultralytics/yolov5</a></p>
<p></p>
<h1>Solid Edge</h1>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EXmbqg4z5I5LkMSvztvXzG0BvIobTTR_ED5EPmm9vjv2rA?e=BpQqeE"> 下載 </a> Solid Edge 2023 student 版安裝檔案 (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EVZctF66LE1BkQCL4mvFEGgBIyM-u2nARksPz8VhUZI1bQ?e=EkdPfh"> 下載 </a> 放入 USB 隨身碟可在電腦輔助設計室中使用的可攜 Solid Edge 2023 學生版 (for @nfu users only)</p>
<p>為何會製作可攜版本?</p>
<p style="padding-left: 30px;">因為電腦輔助設計室的電腦安裝防寫卡, 且電腦中並未安裝 Solid Edge 2023, 為了在上課時段可以與 Python 可攜程式的使用模式一致, 因此製作了能夠直接放入 USB 隨身碟, 以組態檔案設定及批次檔案啟動的方式執行 Solid Edge.</p>
<p style="padding-left: 30px;">由於啟動組態檔案採虛擬硬碟的方式置入操作系統, 因此直接利用 USB 隨身碟啟動後的 Solid Edge 無法直接從操作系統移除.</p>
<p style="padding-left: 30px;">若希望在一般電腦使用 USB 隨身碟中的 Solid Edge, 正確的移除程序為: 以 start_se2023.bat 執行隨身碟中的 Solid Edge 後退出, 確定 X: 虛擬硬碟已經啟動, 之後將 Solid Edge student 2023 版本的安裝程式放入 C:\se_install 後, 利用安裝程序修復採隨身碟啟動的組態設定後, 再次選擇從控制台移除"安裝"在 X: 中的 Solid Edge, 移除後重新開機.</p>
<p style="padding-left: 30px;">之後若要採用正式安裝版, 只要關閉 X: 虛擬硬碟後, 移除 USB 隨身碟中的可攜 Solid Edge (正式移除安裝後 program/edge.exe 將被刪除), 之後再利用安裝套件進行安裝.</p>
<p style="padding-left: 30px;">若之後仍要採可攜方式啟動 Solid Edge, 則必須重新解開原始的可攜 USB 檔案後, 逐一執行 .reg, 之後再利用 start_se2023.bat 開啟 Solid Edge.</p>
<hr/>
<p>採用動機: 可以在不連網的環境下使用, 具備 Synchronous Technology functions.</p>
<p><a href="https://solidedge.siemens.com/en/resource/video/design-a-part-using-synchronous-technology/"> https://solidedge.siemens.com/en/resource/video/design-a-part-using-synchronous-technology/ </a></p>
<p><a href="https://docs.plm.automation.siemens.com/tdoc/se/2020/se_help"> https://docs.plm.automation.siemens.com/tdoc/se/2020/se_help </a> (根據瀏覽器 Language 自動切換語系)</p>
<p><a href="https://docs.plm.automation.siemens.com/tdoc/se/2020/se_help#uid:xid464417"> Solid Edge 上課教材 </a></p>
<ol>
<li><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1012461/index.html?goto=guitour1a.html"> 使用者介面基礎知識 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1012461/index.html?goto=guitour1a.html"> User interface basics </a> ) <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/common/zh_TW/graphics/graphicLibrary/qrc.pdf"> 快速參照卡 </a></li>
<li><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1012412/index.html?goto=sketching_overview.html"> 同步繪製草圖概述 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1012412/index.html?goto=sketching_overview.html"> Synchronous sketching overview </a> )</li>
<li><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1012413/index.html?goto=base_features_4.html"> 建構基本特徵 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1012413/index.html?goto=base_features_4.html"> Constructing base features </a> )</li>
<li><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1012414/index.html?goto=dm_moveRotate.html"> 移動與旋轉模型面 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1012414/index.html?goto=dm_moveRotate.html"> Moving and rotating faces </a> )</li>
<li><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1012415/index.html?goto=part_constraint.html"> 處理面關係 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1012415/index.html?goto=part_constraint.html"> Working with face relationships </a> )</li>
<li><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1012416/index.html?goto=treatment_features.html"> 建構處理特徵 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1012416/index.html?goto=treatment_features.html"> Constructing treatment features </a> )</li>
<li><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1012417/index.html?goto=functional_features.html"> 建構功能特徵 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1012417/index.html?goto=functional_features.html"> Constructing functional features </a> )</li>
<li><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1012424/index.html?goto=bj_re_intro.html"> 組立建模 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1012424/index.html?goto=bj_re_intro.html"> Modeling assemblies </a> )</li>
<li><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1012418/index.html?goto=ordered1a_course.html"> 同步特徵和順序特徵建模 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1012418/index.html?goto=ordered1a_course.html"> Modeling synchronous and ordered features </a> )</li>
<li><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1012430/index.html?goto=drafting_act1.html"> 建立局部詳圖 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1012430/index.html?goto=drafting_act1.html"> Creating detailed drawings </a> )</li>
<li><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1012433/index.html?goto=ap_introduction.html"> 專案練習 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1012433/index.html?goto=ap_introduction.html"> Practicing your skills with projects </a> )</li>
</ol>
<hr/>
<p>使用介面語系變更: 設定 (Settings) -&gt; 選項 (Options) -&gt; 助手 (Helper) -&gt; 語言 (Language)</p>
<p>勾選: 在使用者介面中使用英文, 若不勾選擇使用者介面將會與 Windows 操作系統的語系相同 (即繁體中文介面)</p>
<hr/>
<p>以下為參考資料:</p>
<p style="padding-left: 30px;">The following downloads are for @nfu users only.</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-319-05921-1"> CAD, 3D Modeling, Engineering Analysis, and Prototype Experimentation </a></p>
<p style="padding-left: 60px;">Computer-aided design (CAD), 3D modeling, and engineering analysis can be efficiently applied in many research and industrial fields including aerospace, defense, automobile, consumer product, and many other product development. <br/> <br/> These efficient research and engineering tools apply computer-assisted technology to perform 3D modeling on different products, support geometrical design, make structural analysis, assist optimal product design, create graphic and engineering drawings, and generate production documents. <br/> <br/> This technology helps scientists and technical professionals efficiently import basic geometrical inputs and design information to accelerate the engineering design process, with well-controlled design documents, to support production and manufacturing processes. <br/> <br/> Currently these research and engineering tools have been playing more and more important roles in different businesses and enterprises due to their financial and technical <br/> importance in business, industrial, engineering, and manufacturing applications. <br/> <br/> The computer-aided modeling and analysis allow more sophisticated, flexible, reliable, and cost-effective manufacturing control. <br/> <br/> Automation and automated production system are to use control system to reduce human labor intervention during manufacturing processes and put strong impact on industries. <br/> <br/> Automation and automated system design not only raise the production rate but also control the product quality. It can effectively keep consistent product quality, reduce production lead time, ease material handling, maintain optimal work flow, and meet the product requirement by controlling the flexible and convertible manufacturing/production processes. <br/> <br/> Computer-aided modeling and engineering design can quickly simulate and model the automated production systems and reduce product development life cycles. <br/> <br/> Computer-aided engineering solution can improve and optimize the industrial integral processes in design, development, engineering analysis, and product manufacturing. <br/> <br/> Also the present and future economic globalization requires cost-effective manufacturing via highly industrial automation, efficient design tooling, and better production control. <br/> <br/> This book describes the technology, types, and general applications of these research and engineering tools through conceptual analysis and real case study in computer-aided design, 3D modeling, and engineering analysis. <br/> <br/> Some new product systems, developed by author, are introduced to help readers understand how to design and develop new product systems by using computer-aided design, engineering analysis, and prototype experiment. <br/> <br/> The case studies include design and development of green/sustainable energy systems (solar still, solar panel, and wind power energy), biomedical and surgical instruments, energy-saving cooling system, automated and high-speed assembly system (highly viscous liquid filling and chemical gas charging), robotic system for industrial/automated manufacturing, magnetic sealing system, and high-speed packaging machinery system. <br/> <br/> Multiple engineering case studies in this book aim at the introduction, study, and analysis by using computer-aided modeling and engineering analysis for industrial and engineering <br/> applications. <br/> <br/> All these newly developed product systems have also been verified by prototyping and testing to validate the functionality of these new systems. <br/> <br/> Both computer-aided analysis and experimental methodologies introduced in this book show close results that positively show the feasibility and credibility of analytic and experimental methodologies introduced in this book.</p>
<p style="padding-left: 30px;"><a href="https://assets-global.website-files.com/5b782089dfe0db977c49f302/5e99e25b241a2f23707118f2_Solid%20Edge%20Webinar%20Series%20Internal%20Links.pdf"> Solid Edge Webinar </a></p>
<p style="padding-left: 60px;">Tips and Tricks: <a href="https://www.youtube.com/watch?v=7Vxong5qjgk"> 1 </a> , <a href="https://www.youtube.com/watch?v=7Vxong5qjgk"> 2 </a> , <a href="https://www.youtube.com/watch?v=Doe52QZxCPk"> 3 </a> , <a href="https://www.youtube.com/watch?v=YiA9DRPkGIQ"> 4 </a> , <a href="https://www.youtube.com/watch?v=vyzug_D5zeA"> 5 </a> , <a href="https://www.youtube.com/watch?v=n7s5XhjTpZo"> 6 </a> , <a href="https://www.youtube.com/watch?v=goBKlTYP8Gk"> 2D t o3D </a> ,</p>
<p style="padding-left: 30px;"><a href="https://www.themachinedesign.com/category/cad/solid-edge/"> https://www.themachinedesign.com/category/cad/solid-edge/ </a></p>
<p style="padding-left: 30px;"><a href="https://s3.amazonaws.com/s3.mentor.com/plm/solidedge/SolidEdge01-Part_Design-Draft.pdf"> https://s3.amazonaws.com/s3.mentor.com/plm/solidedge/SolidEdge01-Part_Design-Draft.pdf </a></p>
<p style="padding-left: 30px;"><a href="https://www.themachinedesign.com/solid-edge-tutorial-part-modeling-in-synchronous-mode/"> https://www.themachinedesign.com/solid-edge-tutorial-part-modeling-in-synchronous-mode/ </a></p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EY8Av9-6sxFMnh7GhY1vegoBttgQH2zRpTI6zlcCTXTKMQ?e=t8p8TL"> Solid Edge with synchronous technology Steering a new course in 3D design.pdf </a></p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EamCzpZkMF9Ahd1YTU7yrpkBSXgtvixFZ0KBk7FBysyLfg?e=sGcqYV"> What is Synchronous Technology.pdf </a></p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EctazICF3uVLknwMd3BRV_ABUnQoxnYX_9xu3OIau6jdzQ?e=H00H6R"> Change your modeling approach for better designs.pdf </a></p>
<p style="padding-left: 30px;"><a href="https://solidedge.siemens.com/en/resource/video/design-a-part-using-synchronous-technology/"> https://solidedge.siemens.com/en/resource/video/design-a-part-using-synchronous-technology/ </a> ( <a href="https://www.youtube.com/watch?v=XhoJJzDKFY4"> https://www.youtube.com/watch?v=XhoJJzDKFY4 </a> )</p>
<p style="padding-left: 30px;"><a href="https://www.solid-edge.com.tw/%E3%80%90%E7%B7%9A%E4%B8%8A%E7%A0%94%E8%A8%8E%E6%9C%83%E3%80%91solid-edge-%E5%90%8C%E6%AD%A5%E5%BB%BA%E6%A8%A1%E6%8A%80%E8%A1%93/"> 同步建模線上研討會 </a></p>
<p style="padding-left: 30px;">Synchronous vs Ordered Methods in Solid Edge: <a href="https://youtu.be/XD12cfjvXeE"> https://youtu.be/XD12cfjvXeE </a></p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/Ebu8dDfKDGZGpCir0CIjegEBMgngPvjFDgggem3ERDgGPw?e=9Jp43D"> ROI of Solid Edge with Synchronous Technology.pdf </a></p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EXn4Vr1oOD9FnhEnXwCjoPcBLSLuaDYp2cPOcDIuK0UEug?e=LMIHbO"> Solid Edge with Synchronous Technology course.pdf </a></p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EaSnCV6hOI1NrLvEkXqarf8B6aKjpADa24Erg4IsWqHNwQ?e=Ld7NqL"> Dynamic Designer Motion.pdf </a></p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/yen_nfu_edu_tw/EmvQhIXnr7dBk9BuHxmjyJkBIrI8FdFdvTWI6TyI8taX7g?e=SnLCMX"> 其他 Solid Egde 與 Femap 相關檔案 </a></p>
<p>Synchronous Technology, a feature exclusive to Siemens' Solid Edge software, offers several capabilities that enhance the design and editing process. Here are some areas where Synchronous Technology can be applied:</p>
<ol>
<li>Direct Editing: Synchronous Technology enables direct editing of 3D CAD models, allowing users to modify geometry without relying on feature history. This feature is particularly useful when working with imported or non-native CAD data.</li>
<li>Live Rules: Synchronous Technology utilizes live rules to maintain design intent while making modifications. These rules automatically adjust related features, dimensions, and relationships as changes are made, ensuring the integrity of the design.</li>
<li>Flexible Design Modifications: Synchronous Technology enables quick and easy design modifications, such as changing dimensions, adding or removing features, and adjusting geometry. These modifications can be made without constraints imposed by the original feature tree.</li>
<li>Hybrid Modeling: With Synchronous Technology, users can seamlessly switch between traditional parametric modeling and direct editing, allowing for a hybrid modeling approach that combines the benefits of both methods.</li>
<li>Working with Imported Data: Synchronous Technology is particularly effective when working with imported CAD data from other software systems. It enables efficient editing and modification of the imported geometry, even without access to the original feature history.</li>
<li>Fast Conceptual Design: Synchronous Technology allows for rapid conceptual design iterations by providing the flexibility to modify geometry on-the-fly. This helps in exploring multiple design alternatives and making quick design changes based on project requirements.</li>
<li>Sheet Metal Design: Synchronous Technology includes specific tools for sheet metal design, enabling users to easily modify and edit sheet metal parts without the need for extensive feature editing or remodelling.</li>
<li>Editability of History-Based Models: Synchronous Technology can be used to edit and modify traditional, history-based models created using parametric design methodologies. It provides a non-destructive editing workflow for making changes to the feature-based history of the model.</li>
</ol>
<p>These are some of the areas where Synchronous Technology in Solid Edge provides unique advantages in terms of design flexibility, speed, and ease of use.</p>
<p>Solid Edge community edition:</p>
<p style="padding-left: 30px;"><a href="https://www.plm.automation.siemens.com/plmapp/education/solid-edge/zh_tw/free-software/community"> https://www.plm.automation.siemens.com/plmapp/education/solid-edge/zh_tw/free-software/community </a> (下載約 4GB, 安裝後佔約 8GB, 授權使用時段: 06-jul-2021 至 31-dec-2025)</p>
<p style="padding-left: 30px;">需要 Windows 10 Enterprise or Professional (64-bit only) version 20H2 or later, Windows 11 Enterprise or Professional version 21H2 or later, <a href="https://developer.microsoft.com/en-us/microsoft-edge/webview2/"> https://developer.microsoft.com/en-us/microsoft-edge/webview2/ </a> , MS .Net Framework 4.8, MS Visual C++ 2015-2019 redistributable X64</p>
<p style="padding-left: 30px;">會同時安裝 <a href="https://www.keyshot.com/"> https://www.keyshot.com/ </a> 11 版</p>
<p style="padding-left: 30px;">SELicense.lic 位於 Preferences 目錄下</p>
<p style="padding-left: 30px;">No Solid Edge Cloud Gateway</p>
<p style="padding-left: 30px;">圖檔同教育版無法與商業版相容</p>
<p style="padding-left: 30px;">所建立的工程圖會有浮水印</p>
<p style="padding-left: 30px;"><a href="https://docs.sw.siemens.com/en-US/doc/246738425/PL20211001099989437.user_interface"> Solid Edge Documentation </a></p>
<p style="padding-left: 30px;"><a href="https://docs.plm.automation.siemens.com/docs/se/2020/api/webframe.html"> SE2020 API Documentation </a></p>
<p>與 NX, Onshape 比較:</p>
<p style="padding-left: 30px;">自帶使用授權, 可在不上網情況下使用</p>
<p style="padding-left: 30px;">安裝版 (下載 3.8GB, 安裝後佔 8GB), 適合在自己的電腦或筆電中安裝執行.</p>
<p style="padding-left: 30px;">可攜版 (下載 4.28GB, 解開後佔 9.4GB), 適合在有防寫卡保護的電腦或虛擬主機中使用.</p>
<p style="padding-left: 30px;">功能與 SolidWorks, Onshape 相當, 屬於中級 MCAD</p>
<p>Solid Edge Hot keys：</p>
<ol>
<li>Esc鍵：取消現行指令回到選取狀態</li>
<li>Ctrl + F：前視圖 (Front)</li>
<li>F3 鍵：平面鎖定與解除 Toggle</li>
<li>Ctrl + I：等角圖 (Isometric)</li>
<li>N 鍵：切換尺寸標示方向</li>
<li>Ctrl + R：右側視圖 (Right)</li>
<li>Ctrl + T：上視圖 (Top)</li>
</ol>
<p></p>
<h2>SE_Tutorial</h2>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/stopamm/index.html"> 建立零件 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/stopamm/index.html"> Create a part </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/stoabmm/index.html"> 建立組立件 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/stoabmm/index.html"> Create an assembly </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/stodcmm/index.html"> 局部詳圖簡介 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/stodcmm/index.html"> Introduction to detailed drawings </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/xid1685423/index.html"> Solid Edge 模擬簡介 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/xid1685423/index.html"> Introduction to Solid Edge Simulation </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/stppabg/index.html"> 同步特徵建模簡介 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/stppabg/index.html"> Introduction to modeling synchronous features </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/stppbac/index.html"> 以同步特徵對中間零件建模 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/stppbac/index.html"> Intermediate part modeling with synchronous features </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seppabj/index.html"> 順序特徵零件建模簡介 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seppabj/index.html"> Introduction to modeling parts with ordered features </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seaaasl/index.html"> 建構滑塊組立件 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seaaasl/index.html"> Building a slider assembly </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/staaask/index.html"> 建構滾輪組立件 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/staaask/index.html"> Building a roller assembly </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seaacfa/index.html"> 建構組立件家族 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seaacfa/index.html"> Building a family of assemblies </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/sbddaan/index.html"> 局部放大圖紙 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/sbddaan/index.html"> Detailing a drawing </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/sbddadr/index.html"> 建立 2D 圖紙 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/sbddadr/index.html"> Creating 2D drawings </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seddbht/index.html"> 在圖紙上建立孔參數表 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seddbht/index.html"> Creating a hole table on a drawing </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seppas3/index.html"> 同步特徵和順序特徵零件建模 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seppas3/index.html"> Modeling parts with synchronous and ordered features </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/stssash/index.html"> 同步鈑金建模簡介 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/stssash/index.html"> Introduction to sheet metal parts with synchronous features </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/sessash/index.html"> 順序鈑金建模簡介 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/sessash/index.html"> Introduction to ordered sheet metal modeling </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/sesscmc/index.html"> 順序輪廓彎邊建模 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/sesscmc/index.html"> Constructing a contour flange </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seppcfp/index.html"> 建立零件家族 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seppcfp/index.html"> Creating a family of parts </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seppcpl/index.html"> 模具部件建模 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seppcpl/index.html"> Modeling molded parts </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seppcsw/index.html"> 掃掠特徵建模 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seppcsw/index.html"> Modeling swept features </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seppcvt/index.html"> 在零件模型中使用變數 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seppcvt/index.html"> Using variables in part model </a> s)</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/stddb3d/index.html"> 從圖紙視圖對零件建模 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/stddb3d/index.html"> Modeling parts from drawing views </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/sesscfl/index.html"> 建立特徵庫 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/sesscfl/index.html"> Creating a feature library </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seaabtb/index.html"> 使用管路設計建立管件 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seaabtb/index.html"> Creating a tube part with XpresRoute </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seaabwd/index.html"> 建構銲接 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seaabwd/index.html"> Constructing a weldment </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seddasc/index.html"> 建立示意圖 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seddasc/index.html"> Creating schematic diagrams </a> )</p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/zh_TW/seddbgs/index.html"> 使用工程計算工具 </a> ( <a href="https://docs.plm.automation.siemens.com/data_services/resources/se/2020/se_help/training/en_US/seddbgs/index.html"> Using engineering calculation tools </a> )</p>
<p><a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/yen_nfu_edu_tw/ElplrD9SFypJgED4WenMCFUBrx3Ve2S67z2Xa3Zz2vQqcw?e=TmqdUK"> Solid Edge 中英文手冊 </a> (for @nfu users only)</p>
<hr>
<p><a href="https://solidedge.siemens.com/en/resources/tutorials/"> https://solidedge.siemens.com/en/resources/tutorials/ </a></p>
<p><a href="https://docs.plm.automation.siemens.com/tdoc/se/latest/se_help/#uid:index_xid618399:xid486886"> Solid Edge Tutorial </a></p>
<p><a href="https://www.gearupu.com/students.html"> SE for Student </a></p>
<p><a href="https://solidedge.siemens.com/en/solutions/users/educators/#project-tutorials"> Project Tutorial </a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EVlrCyH8aDFOlJNhRC1DVSQBffjuzI97QCpqJTC_WldKtA?e=TiGTws"> Test drive Solid Edge.pdf </a></p>
<p>在安裝過程利用 regshot 紀錄套件所新增的 .reg, 或可直接將套件放入 USB, 並提供所需的 registry, 就有機會在安裝防寫卡的電腦上直接執行.</p>
<p>Delete installed registries:</p>
<p>Powershell commond file: delete_key.ps1</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"># Specify the registry keys and values to delete
$keysToDelete = @(
    "HKEY_CURRENT_USER\Path\To\Key1",
    "HKEY_LOCAL_MACHINE\Path\To\Key2",
    "HKEY_CURRENT_USER\Path\To\Key3"
)

# Delete the specified keys and values
foreach ($key in $keysToDelete) {
    Write-Host "Deleting key: $key"
    Remove-Item -Path "Registry::$key" -Recurse -Force
}
</pre>
<p>or read the installed .reg and delete keys by reading .reg file:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"># Define the path to the .reg file
$regFilePath = "C:\path\to\your\file.reg"

# Read the content of the .reg file
$regContent = Get-Content -Path $regFilePath -Raw

# Delete the registry entries
try {
    # Disable registry redirection to avoid issues with 32-bit and 64-bit keys
    if ([Environment]::Is64BitProcess) {
        Set-ItemProperty -Path "HKLM:\Software\Microsoft\Wow6432Node\Microsoft.PowerShell\Registry::HKCU" -Name "DisableRedirection" -Value 1
    } else {
        Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name "NoChangeStartMenu" -Value 1
    }
    
    # Import the .reg file to delete the registry entries
    $null = Invoke-Expression -Command $regContent
}
finally {
    # Re-enable registry redirection
    if ([Environment]::Is64BitProcess) {
        Remove-ItemProperty -Path "HKLM:\Software\Microsoft\Wow6432Node\Microsoft.PowerShell\Registry::HKCU" -Name "DisableRedirection" -ErrorAction SilentlyContinue
    } else {
        Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer" -Name "NoChangeStartMenu" -ErrorAction SilentlyContinue
    }
}
</pre>
<p><a href="https://sourceforge.net/projects/regshot/"> https://sourceforge.net/projects/regshot/ </a></p>
<p style="padding-left: 30px;">Regshot is an open-source (LGPL) registry compare utility that allows you to quickly take a snapshot of your registry and then compare it with a second one - done after doing system changes or installing a new software product.</p>
<h1>NX</h1>
<p>採用動機: CAD/CAE/CAM 功能完整的高階電腦輔助機械設計套件</p>
<p><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EclS-NMhqJ9JvCa-pIQ_jMsBQB1tipr_Zgc8kT8ha1kMtg?e=RvnCpR"> NX2027.3401_lite_cad2022.7z </a> for @nfu users only</p>
<p><a href="https://docs.plm.automation.siemens.com/tdoc/nx/1899/nx_help/#uid:index"> NX_help for 1899 </a></p>
<h1>Onshape</h1>
<p>採用動機: 全雲端中階電腦輔助機械設計套件, 近端電腦無需安裝套件, 可在手機與平板中的 Onshape App 中使用.</p>
<p><a href="https://www.onshape.com/en/education/"> https://www.onshape.com/en/education/ </a></p>
<h1>Solvespace</h1>
<p>採用動機: 提供 C++ 原始碼的參數式電腦輔助設計繪圖套件, 檔案可直接放入 USB 隨身碟操作, 且可練習使用 C++ 編譯器自行編譯.</p>
<p><a href="https://solvespace.com/index.pl"> https://solvespace.com/index.pl </a></p>
<p><a href="https://github.com/solvespace/solvespace"> https://github.com/solvespace/solvespace </a></p>
<p><a href="https://www.farwire.net/SolveSpace-LearningGuide.htm"> https://www.farwire.net/SolveSpace-LearningGuide.htm </a></p>
<p><a href="https://solvespace.readthedocs.io/_/downloads/en/latest/pdf/"> https://solvespace.readthedocs.io/_/downloads/en/latest/pdf/ </a></p>
<p><a href="https://solvespace.com/forum.pl?action=viewthread&amp;parent=3165&amp;tt=1601980716"> Theory behind Solvespace </a></p>
<p><a href="https://link.springer.com/book/10.1007/978-3-030-02399-7"> 2019 Advanced CAD Modeling </a></p>
<hr/>
<p>編譯 Solvespace:</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EUd5wZF9jSdCtrDkLvEfyj4Bq8pkV0b3kKZ1fxeNMhC8qg?e=slvduQ"> 下載 MSYS2 and Cmake.7z </a> <span> (下載 3.47GB 解開後 12.6GB, for @nfu users only) </span></p>
<p><span> 配置 MSYS2 與 Cmake, 設定執行搜尋路徑: </span></p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">set path_msys2=%Disk%:\msys64_20210419\mingw64\bin;
set path_cmake=%Disk%:\cmake-3.21.0-windows-x86_64\bin
REM 將 path_msys2 與 path_cmake 納入系統 path
path=%Disk%:;%path_python%;%path_msys2%;%path_cmake%;%path_lua%;%path_git%;%path_tcc%;%path_gnuplot%;%path_scite%;%path_miktex%;%path%;</pre>
<p>而且必須 rename Y:\msys64_20210419\mingw64\bin\sh.exe 與 Y:\portablegit_2.31.1\bin\sh.exe 換成其他名稱.</p>
<p>2023.05.12 執行編譯:</p>
<p>連子模組 (submodule) 一起取下:</p>
<p>git clone --recurse-submodules <a href="https://github.com/solvespace/solvespace.git"> https://github.com/solvespace/solvespace.git </a> (最新原始碼, 可能因開發中, 導致資料不完整而無法編譯)</p>
<p>or</p>
<p><span> git clone --recurse-submodules </span> <a href="https://github.com/solvespace/solvespace.git"> https://github.com/solvespace/solvespace.git </a> <span> -b v3.1 </span></p>
<p>or</p>
<p>git clone --recurse-submodules <a href="https://github.com/solvespace/solvespace.git"> https://github.com/solvespace/solvespace.git </a> -b v3.0</p>
<p>cd solvespace <br/> mkdir build <br/> cd build <br/> cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release <br/> make</p>
<p>need libwinpthread-1.dll to execute solvespace.exe</p>
<p><a href="http://wcm.cycu.org:88/github/cd2023/downloads/solvespace_exe_3.0.7z"> solvespace_exe_3.0.7z </a></p>
<p><a href="http://wcm.cycu.org:88/github/cd2023/downloads/solvespace_exe_3.1.7z"> solvespace_exe_3.1.7z </a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ERFXVU8sGoZBq8B302khxfUBY63_TbYu4XiWdRIIug065A?e=SiTcgX"> solvespace 3.0 and 3.1 原始碼與 Leo Editor 開發專案.7z </a> (下載 619MB, 解開後 1GB)</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="https://cq.cx/dl/sketchflat-internals.pdf"> 2007 SketchFlat, A Constraint-Based Drawing Tool </a></p>
<p style="padding-left: 30px;"><a href="https://librearts.org/2013/08/solvespace-released-under-gpl/"> https://librearts.org/2013/08/solvespace-released-under-gpl/ </a></p>
<p style="padding-left: 30px;"><a href="https://weekly-geekly.imtqy.com/articles/335962/index.html"> https://weekly-geekly.imtqy.com/articles/335962/index.html </a></p>
<p style="padding-left: 30px;"><a href="https://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/"> https://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/ </a></p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-540-77974-2"> 2008 Computational Geometry </a> <span> (只能在校網、使用校內代理主機或使用校內 VPN 才能下載) </span></p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-540-89068-3"> 2009 Geometric Algebra with Applications in Engineering </a> <span> (只能在校網、使用校內代理主機或使用校內 VPN 才能下載), <a href="http://wcm.cycu.org:88/github/cd2023/downloads/CLUCalc_4.3.2.7z"> CLUCalc_4.3.2.7z </a> , <a href="http://wcm.cycu.org:88/github/cd2023/downloads/CLUCalcSource_win_3.1.7z"> CLUCalcSource_win_3.1.7z </a> <a href="https://github.com/foobarz/CLUCalcLinux"> https://github.com/foobarz/CLUCalcLinux </a> , <a href="http://web.archive.org/web/20071010093218/http://www.clucalc.info/"> Wayback </a> , <a href="https://mde.tw/wcm2023/downloads/clucalc_doc/"> CLUCalc Documentation </a> . </span></p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4471-4360-4"> 2013 Geometric Modeling and Reasoning of Human-Centered Freeform Products </a> (只能在校網、使用校內代理主機或使用校內 VPN 才能下載)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-642-31794-1"> 2013 Foundations of Geometric Algebra Computing </a> <span> (只能在校網、使用校內代理主機或使用校內 VPN 才能下載) </span></p>
<p style="padding-left: 30px;"><span> <a href="https://link.springer.com/book/10.1007/978-1-4612-0159-5"> Geometric Algebra with Applications in Science and Engineering </a> <span> (只能在校網、使用校內代理主機或使用校內 VPN 才能下載) </span> </span></p>
<p style="padding-left: 30px;"><a href="https://www.inf.ed.ac.uk/teaching/courses/cg/Web/intro_to_curves.pdf"> https://www.inf.ed.ac.uk/teaching/courses/cg/Web/intro_to_curves.pdf </a></p>
<p style="padding-left: 30px;"><a href="http://web.math.ku.dk/noter/filer/geom1.pdf"> Curves and Surfaces </a></p>
<p style="padding-left: 30px;"><a href="https://arxiv.org/pdf/1405.4465.pdf"> Curvatures at the singular points of algebraic curves and surfaces </a></p>
<p style="padding-left: 30px;"><a href="http://www.gaalop.de/wp-content/uploads/Masterthesis.pdf"> 2012 Geometric Algebra enhancedPrecompiler for C++ and OpenCL </a></p>
<p style="padding-left: 30px;"><a href="https://slehar.wordpress.com/2014/03/18/clifford-algebra-a-visual-introduction/"> https://slehar.wordpress.com/2014/03/18/clifford-algebra-a-visual-introduction/ </a></p>
<p style="padding-left: 30px;"><a href="https://zbmath.org/"> https://zbmath.org/ </a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2023/downloads/Linkage_3.16.14.7z"> Linkage_3.16.14.7z </a> ( <a href="https://blog.rectorsquid.com/linkage-mechanism-designer-and-simulator/"> 官方網站 </a> , <a href="https://github.com/scrum-1/Linkage"> 3.2 source codes </a> , <a href="https://sites.google.com/a/jbps.ttct.edu.tw/linkage-ji-gou-she-ji/"> 導引 </a> )</p>
<p style="padding-left: 30px;">C++ 學習資源:</p>
<p style="padding-left: 60px;"><a href="http://www.icce.rug.nl/documents/cplusplus/"> http://www.icce.rug.nl/documents/cplusplus/ </a></p>
<p style="padding-left: 60px;"><a href="https://archive.org/details/TICPP2ndEdVolOne"> https://archive.org/details/TICPP2ndEdVolOne </a></p>
<p style="padding-left: 60px;"><a href="https://en.wikibooks.org/wiki/C%2B%2B_Programming"> C++ Programming </a></p>
<p style="padding-left: 60px;"><a href="https://www.learncpp.com/"> https://www.learncpp.com/ </a></p>
<p style="padding-left: 60px;"><a href="https://www.syncfusion.com/succinctly-free-ebooks/cplusplus"> https://www.syncfusion.com/succinctly-free-ebooks/cplusplus </a></p>
<h2>SketchFlat</h2>
<p><a href="https://cq.cx/sketchflat.pl"> https://cq.cx/sketchflat.pl </a> ( <a href="https://cq.cx/index.pl"> https://cq.cx/index.pl </a> )</p>
<p><a href="https://github.com/scrum-1/SketchFlat2019"> https://github.com/scrum-1/SketchFlat2019 </a></p>
<p><a href="/downloads/sketchflat_source_and_exe.7z"> sketchflat_source_and_exe.7z </a></p>
<h1>CoppeliaSim</h1>
<p>採用動機: 提供 C++ 原始碼, 可與 MCAD 結合建立機電資虛實整合模擬系統.</p>
<p><a href="https://www.coppeliarobotics.com/"> https://www.coppeliarobotics.com/ </a></p>
<p><a href="https://github.com/CoppeliaRobotics"> https://github.com/CoppeliaRobotics </a></p>
<p><a href="https://mde.tw/pjcopsim"> https://mde.tw/pjcopsim </a></p>
<p><a href="https://pubmed.ncbi.nlm.nih.gov/36015783/"> Modeling and Control of a Spherical Robot in the CoppeliaSim Simulator </a></p>
<p>編譯 CoppeliaSim 需要 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EUd5wZF9jSdCtrDkLvEfyj4Bq8pkV0b3kKZ1fxeNMhC8qg?e=slvduQ"> 下載 MSYS2 and Cmake.7z <span> </span> </a> <span> </span> <span> (下載 3.47GB 解開後 12.6GB, for @nfu users only) </span></p>
<p><a href="https://mde.tw/blog/compile-coppeliasim-4.3.0-rev12.html"> https://mde.tw/blog/compile-coppeliasim-4.3.0-rev12.html </a></p>
<h2>PICSimLab</h2>
<p><a href="https://www.youtube.com/watch?v=be96Ds8umig"> https://www.youtube.com/watch?v=be96Ds8umig </a></p>
<h4>Arduino</h4>
<p><a href="https://github.com/lcgamboa/picsimlab"> https://github.com/lcgamboa/picsimlab </a> Programmable IC Simulator Laboratory</p>
<p><a href="https://www.arduino.cc/en/software"> https://www.arduino.cc/en/software </a> Arduino IDE</p>
<p><a href="https://com0com.sourceforge.net/"> https://com0com.sourceforge.net/ </a> Null-modem Emulator</p>
<p>PICSimLab 模擬 Arduino Uno (COM6) 與 Stepper Motor:</p>
<p><img alt="" height="270" src="/images/picsimlab_arduino_uno.gif" width="400"/></p>
<p><img caption="false" height="400" src="/images/picsimlab_stepper_motor.gif" width="249"/></p>
<p>透過 PICSimLab Pin Viewer, 將 PB0/8, PB1/~9, PB2/~10 與 PB3/~11 與 Stepper Motor 接線.</p>
<p><img alt="" height="232" src="/images/picsimlab_pin_viewer.gif" width="400"/></p>
<p>透過 com0com 模擬 COM6 &lt;-&gt; COM4 連線.</p>
<p><img alt="" height="327" src="/images/com0com_setup.png" width="400"/></p>
<p>Arduino IDE 將 Stepper Motor 控制程式編譯後透過 COM4 經由 com0com 將程式經由 COM6 上傳到 Virtual Arduino Uno board.</p>
<p><img alt="" height="302" src="/images/arduino_ide.png" width="400"/></p>
<p>接著希望可以利用 CoppeliaSim zmqRemoteAPI Python 讀取 PICSimLab 控制 Stepper Motor 的資料, 用來同步控制位於 CoppeliaSim 場景中的 Virtual Stepper Motor.</p>
<p>Reference:</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/chapter/10.1007/978-3-030-82544-7_24"> HoRoSim, a Holistic Robot Simulator: Arduino Code, Electronic Circuits and Physics </a> ( <a href="https://link.springer.com/content/pdf/10.1007/978-3-030-82544-7_24.pdf"> pdf </a> )</p>
<p style="padding-left: 30px;"><a href="https://github.com/scrum-1/horosim"> scrum-1/horosim (github.com) </a></p>
<h2>Models</h2>
<p><a href="https://github.com/CoppeliaRobotics/models"> https://github.com/CoppeliaRobotics/models </a></p>
<p><a href="https://github.com/mdecourse/V-REP-demo"> https://github.com/mdecourse/V-REP-demo </a></p>
<p><a href="https://github.com/mdecycu/Active-Perception"> https://github.com/mdecycu/Active-Perception </a></p>
<p><a href="https://github.com/mdecourse-org/V-Rep"> https://github.com/mdecourse-org/V-Rep </a></p>
<p><a href="https://github.com/mdecourse-org/vrep-volleyball"> https://github.com/mdecourse-org/vrep-volleyball </a></p>
<p><a href="https://github.com/mdecourse/Autonomous-car-simulation"> https://github.com/mdecourse/Autonomous-car-simulation </a></p>
<p><a href="https://github.com/mdecourse/First_Project"> https://github.com/mdecourse/First_Project </a></p>
<p><a href="https://github.com/mdecourse/Ball-Tracking-Mobile-Robots"> https://github.com/mdecourse/Ball-Tracking-Mobile-Robots </a></p>
<p><a href="https://github.com/mdecourse/Ball-Balancing-Machine"> https://github.com/mdecourse/Ball-Balancing-Machine </a></p>
<p><a href="https://github.com/mdecourse/CoppeliaSim-Blender-Tools"> https://github.com/mdecourse/CoppeliaSim-Blender-Tools </a></p>
<p><a href="https://github.com/mdecourse/Vision_Project_M1"> https://github.com/mdecourse/Vision_Project_M1 </a></p>
<p><a href="https://github.com/mdecourse/self-driving-car-simulation"> https://github.com/mdecourse/self-driving-car-simulation </a></p>
<p><a href="https://github.com/mdecourse-org/PID_wall_following"> https://github.com/mdecourse-org/PID_wall_following </a></p>
<p><a href="https://github.com/mdecourse-org/coppelia_gui_robot_control_python"> https://github.com/mdecourse-org/coppelia_gui_robot_control_python </a></p>
<h2>Research</h2>
<p>類比電腦與磁浮控制系統設計</p>
<p>Analog computer and magnetic levitation control system design</p>
<p><a href="https://people.eecs.berkeley.edu/~shah//docs/dpac.pdf"> DPAC: Digitally Programmable Analog Computer </a></p>
<p><a href="https://upcommons.upc.edu/bitstream/handle/2117/388470/tfm-mariamercade.pdf"> Construction and control of a magnetic levitation system </a></p>
<p><a href="https://thl.okstate.edu/Handout_MagLevNeural.pdf"> Magnetic Levitation System </a></p>
<p><a href="https://scholarworks.iupui.edu/bitstream/handle/1805/32677/MagLev_CapstoneReport_05052021.pdf?sequence=1"> Magnetic Levitation System: Senior Project Report </a></p>
<p><a href="https://www.ece.ucf.edu/seniordesign/su2013fa2013/g02/docs/final_doc.pdf"> MagLev </a></p>
<p><a href="https://scholar.ppu.edu/bitstream/handle/123456789/137/MainThesis.pdf?sequence=2&amp;isAllowed=y"> Control of a Ball and Plate System Using Model-Based Controllers </a></p>
<p><a href="https://scholarworks.uark.edu/cgi/viewcontent.cgi?article=4858&amp;context=etd"> Motor Control Systems Analysis, Design, and Optimization Strategies for a Lightweight Excavation RobotStrategies for a Lightweight Excavation Robot </a></p>
<p><a href="https://scholarscompass.vcu.edu/cgi/viewcontent.cgi?article=5737&amp;context=etd"> Understanding and Design of an Arduino-based PID Controller </a></p>
<p><a href="https://github.com/mdecourse/Ball-Balancing-Machine"> https://github.com/mdecourse/Ball-Balancing-Machine </a></p>
<p><a href="https://stackoverflow.com/questions/54191098/how-can-i-detect-if-a-object-ballbeing-tracked-using-opencv-passed-through-a-g"> https://stackoverflow.com/questions/54191098/how-can-i-detect-if-a-object-ballbeing-tracked-using-opencv-passed-through-a-g </a></p>
<p><a href="https://github.com/mdecourse/TableSoccerCV"> https://github.com/mdecourse/TableSoccerCV </a></p>
<p><a href="https://kananvyas.medium.com/player-and-football-detection-using-opencv-python-in-fifa-match-6fd2e4e373f0"> https://kananvyas.medium.com/player-and-football-detection-using-opencv-python-in-fifa-match-6fd2e4e373f0 </a></p>
<hr/>
<p>Study of the ball balance platform in the cyber-physical integration environment <br/> <br/> 虛實整合環境中的圓球平衡台研究</p>
<p><a href="https://github.com/mdecourse/Ball-Balancing-Machine"> https://github.com/mdecourse/Ball-Balancing-Machine </a></p>
<p><a href="https://www.diva-portal.org/smash/get/diva2:1373784/FULLTEXT01.pdf"> 2019 Construction and theoretical study of a ball balancing platform </a></p>
<p><a href="https://www.mdpi.com/2079-9292/8/2/248"> 2019 Cyber-Physical System Framework for Measurement and Analysis of Physical Activities </a></p>
<p><a href="https://www.researchgate.net/publication/277918242_A_Cyber_Physical_Interface_for_Automation_Systems-Methodology_and_Examples"> A Cyber Physical Interface for Automation Systems—Methodology and Examples </a></p>
<p><a href="https://journals.sagepub.com/doi/epub/10.1177/16878132221109969"> A review of component-in-the-loop: Cyber-physical experiments for rapid system development and integration </a></p>
<p><a href="https://core.ac.uk/download/pdf/216056118.pdf"> An Analysis-Driven Rapid Design Process for Cyber-Physical Systems </a></p>
<p><a href="https://www.ics.uci.edu/~givargis/pubs/C61.pdf"> From the Browser to the Remote Physical Lab: Programming Cyber-physical Systems </a></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p></hr></hr>