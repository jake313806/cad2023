var tipuesearch = {"pages": [{'title': 'About', 'text': 'repo:  https://github.com/mdecycu/cad2023 \n site:  https://mde.tw/cad2023 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Solid Edge', 'text': '採用動機: 可以在不連網的環境下使用 \n Solid Edge community edition: \n https://www.plm.automation.siemens.com/plmapp/education/solid-edge/zh_tw/free-software/community \xa0(下載約 4GB, 安裝後佔約 8GB, 授權使用時段: 06-jul-2021 至 31-dec-2025) \n 需要 Windows 10 Enterprise or Professional (64-bit only) version 20H2 or later, Windows 11 Enterprise or Professional version 21H2 or later,  https://developer.microsoft.com/en-us/microsoft-edge/webview2/ , MS .Net Framework 4.8, MS Visual C++ 2015-2019 redistributable X64 \n 會同時安裝\xa0 https://www.keyshot.com/ \xa011 版 \n SELicense.lic 位於 Preferences 目錄下 \n No Solid Edge Cloud Gateway \n 圖檔同教育版無法與商業版相容 \n 所建立的工程圖會有浮水印 \n Solid Edge Documentation \n SE2020 API Documentation \n 與 NX, Onshape 比較: \n 自帶使用授權, 可在不上網情況下使用 \n 安裝版 (下載 3.8GB, 安裝後佔 8GB), 適合在自己的電腦或筆電中安裝執行. \n 可攜版 (下載 4.28GB, 解開後佔 9.4GB), 適合在有防寫卡保護的電腦或虛擬主機中使用. \n 功能與 SolidWorks, Onshape 相當, 屬於中級 MCAD', 'tags': '', 'url': 'Solid Edge.html'}, {'title': 'NX', 'text': '採用動機: CAD/CAE/CAM 功能完整的高階電腦輔助機械設計套件 \n NX2027.3401_lite_cad2022.7z  for @nfu users only', 'tags': '', 'url': 'NX.html'}, {'title': 'Onshape', 'text': '採用動機: 全雲端中階電腦輔助機械設計套件, 近端電腦無需安裝套件, 可在手機與平板中的 Onshape App 中使用. \n https://www.onshape.com/en/education/', 'tags': '', 'url': 'Onshape.html'}, {'title': 'Solvespace', 'text': '採用動機: 提供 C++ 原始碼的參數式電腦輔助設計繪圖套件, 檔案可直接放入 USB 隨身碟操作, 且可練習使用 C++ 編譯器自行編譯. \n https://solvespace.com/index.pl   \n https://github.com/solvespace/solvespace  ', 'tags': '', 'url': 'Solvespace.html'}, {'title': 'CoppeliaSim', 'text': '採用動機: 提供 C++ 原始碼, 可與 MCAD 結合建立機電資虛實整合模擬系統. \n https://www.coppeliarobotics.com/ \n https://github.com/CoppeliaRobotics \n Modeling and Control of a Spherical Robot in the CoppeliaSim Simulator ', 'tags': '', 'url': 'CoppeliaSim.html'}, {'title': 'PICSimLab', 'text': 'https://www.youtube.com/watch?v=be96Ds8umig   \n Arduino \n https://github.com/lcgamboa/picsimlab  Programmable IC Simulator Laboratory \n https://www.arduino.cc/en/software  Arduino IDE \n https://com0com.sourceforge.net/  Null-modem Emulator \n PICSimLab 模擬 Arduino Uno (COM6) 與 Stepper Motor: \n \n \n 透過 PICSimLab Pin Viewer, 將 PB0/8, PB1/~9, PB2/~10 與 PB3/~11 與 Stepper Motor 接線. \n \n 透過 com0com 模擬 COM6 <-> COM4 連線. \n \n Arduino IDE 將 Stepper Motor 控制程式編譯後透過 COM4 經由 com0com 將程式經由 COM6 上傳到 Virtual Arduino Uno board. \n \n 接著希望可以利用 CoppeliaSim zmqRemoteAPI Python 讀取 PICSimLab 控制 Stepper Motor 的資料, 用來同步控制位於 CoppeliaSim 場景中的 Virtual Stepper Motor. \n Reference: \n HoRoSim, a Holistic Robot Simulator: Arduino Code, Electronic Circuits and Physics  ( pdf ) \n scrum-1/horosim (github.com)', 'tags': '', 'url': 'PICSimLab.html'}, {'title': 'Brython', 'text': 'cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束 ', 'tags': '', 'url': 'Brython.html'}]};